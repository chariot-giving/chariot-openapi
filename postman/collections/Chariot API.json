{
	"info": {
		"_postman_id": "171b6f89-d8d7-48cd-998e-a672adf99a1f",
		"name": "Chariot API",
		"description": "The Chariot REST API. Please see https://givechariot.readme.io/reference/overview for more details.\n\nContact Support:\n Name: Chariot Development Team\n Email: partners@givechariot.com",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_uid": "23306205-171b6f89-d8d7-48cd-998e-a672adf99a1f"
	},
	"item": [
		{
			"name": "Nonprofits",
			"item": [
				{
					"name": "Get nonprofit by EIN",
					"id": "e48bf3b7-3e46-4cb1-a115-0aababe64aab",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "scope",
									"value": "create:nonprofits read:nonprofits create:connects read:connects create:grants read:grants update:grants read:events create:event_subscriptions read:event_subscriptions update:event_subscriptions",
									"type": "string"
								},
								{
									"key": "accessTokenUrl",
									"value": "https://login.givechariot.com/oauth/token",
									"type": "string"
								},
								{
									"key": "grant_type",
									"value": "client_credentials",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/nonprofit/:ein",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"nonprofit",
								":ein"
							],
							"variable": [
								{
									"key": "ein",
									"value": "<string>",
									"description": "(Required) The unique federal employer identification number (EIN) of the nonprofit.\nThis value should be exactly 9 digits and should not contain any special characters such as dashes."
								}
							]
						},
						"description": "Get a nonprofit organization by EIN.\nIf the nonprofit does not exist, this returns 404 Not Found status.\nIf the nonprofit does not pass our compliance checks, a 422 Unprocessable Content is returned with a reason.\nIn the case that the nonprofit does not exist, you can create one by calling the POST /v1/nonprofits API endpoint.\nThe EIN should be exactly 9 digits and should not contain any special characters such as dashes."
					},
					"response": [
						{
							"id": "3ef2a1a9-9879-4e2f-8704-7d8f64c1763e",
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/nonprofit/:ein",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"nonprofit",
										":ein"
									],
									"variable": [
										{
											"key": "ein"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"disabled": false,
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "X-Request-Id",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"ein\": \"<string>\",\n  \"preferredName\": \"<string>\",\n  \"suborganizations\": [\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"preferredName\": \"<string>\",\n      \"address\": {\n        \"city\": \"<string>\",\n        \"country\": \"<string>\",\n        \"line1\": \"<string>\",\n        \"postalCode\": \"<string>\",\n        \"state\": \"<string>\",\n        \"line2\": \"<string>\"\n      },\n      \"picture\": \"<string>\",\n      \"website\": \"<string>\",\n      \"createdAt\": \"<dateTime>\",\n      \"updatedAt\": \"<dateTime>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"preferredName\": \"<string>\",\n      \"address\": {\n        \"city\": \"<string>\",\n        \"country\": \"<string>\",\n        \"line1\": \"<string>\",\n        \"postalCode\": \"<string>\",\n        \"state\": \"<string>\",\n        \"line2\": \"<string>\"\n      },\n      \"picture\": \"<string>\",\n      \"website\": \"<string>\",\n      \"createdAt\": \"<dateTime>\",\n      \"updatedAt\": \"<dateTime>\"\n    }\n  ],\n  \"address\": {\n    \"city\": \"<string>\",\n    \"country\": \"<string>\",\n    \"line1\": \"<string>\",\n    \"postalCode\": \"<string>\",\n    \"state\": \"<string>\",\n    \"line2\": \"<string>\"\n  },\n  \"picture\": \"<string>\",\n  \"website\": \"<string>\",\n  \"createdAt\": \"<dateTime>\",\n  \"updatedAt\": \"<dateTime>\",\n  \"isDafPayNetwork\": \"<boolean>\",\n  \"inGoodStanding\": \"<boolean>\"\n}"
						},
						{
							"id": "5e82b071-7b51-41bd-8e45-faec062501ec",
							"name": "The request is invalid or contains invalid parameters",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/nonprofit/:ein",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"nonprofit",
										":ein"
									],
									"variable": [
										{
											"key": "ein"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"disabled": false,
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "X-Request-Id",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n  \"timestamp\": \"<string>\",\n  \"code\": \"<number>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
						},
						{
							"id": "5507eaac-3ca4-47f0-adbd-380b45ad4f36",
							"name": "Unauthorized. The request is missing the security (OAuth2 Bearer token) requirements and the server is unable to verify the identify of the caller.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/nonprofit/:ein",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"nonprofit",
										":ein"
									],
									"variable": [
										{
											"key": "ein"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"disabled": false,
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "X-Request-Id",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n  \"timestamp\": \"<string>\",\n  \"code\": \"<number>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
						},
						{
							"id": "8a7812a5-a555-4cc2-8d39-1d3290b2b12d",
							"name": "Access denied",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/nonprofit/:ein",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"nonprofit",
										":ein"
									],
									"variable": [
										{
											"key": "ein"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"disabled": false,
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "X-Request-Id",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n  \"timestamp\": \"<string>\",\n  \"code\": \"<number>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
						},
						{
							"id": "83c0e0fa-fcae-458d-93f1-2d6d35e2e1d7",
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/nonprofit/:ein",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"nonprofit",
										":ein"
									],
									"variable": [
										{
											"key": "ein"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"disabled": false,
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "X-Request-Id",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n  \"timestamp\": \"<string>\",\n  \"code\": \"<number>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
						},
						{
							"id": "7a1f6a2c-80ec-4d19-b80e-389f236326ea",
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/nonprofit/:ein",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"nonprofit",
										":ein"
									],
									"variable": [
										{
											"key": "ein"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"disabled": false,
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "X-Request-Id",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n  \"timestamp\": \"<string>\",\n  \"code\": \"<number>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Create nonprofit",
					"id": "81ca95b7-bd13-473c-89af-89995aecfc87",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "scope",
									"value": "create:nonprofits read:nonprofits create:connects read:connects create:grants read:grants update:grants read:events create:event_subscriptions read:event_subscriptions update:event_subscriptions",
									"type": "string"
								},
								{
									"key": "accessTokenUrl",
									"value": "https://login.givechariot.com/oauth/token",
									"type": "string"
								},
								{
									"key": "grant_type",
									"value": "client_credentials",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"ein\": \"<string>\",\n  \"user\": {\n    \"email\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\"\n  },\n  \"preferredName\": \"<string>\",\n  \"picture\": \"<string>\",\n  \"website\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/nonprofits",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"nonprofits"
							]
						},
						"description": "Create a nonprofit organization account.\nThis is useful for integration partners to use after a nonprofit consents to use the Chariot payment option on their donation forms.\nIf a nonprofit does not already exist for the EIN, this will return a 201 Created status.\nIf a nonprofit already exists for the given EIN on the system, this will return a 200 Created status.\nIf the nonprofit does not pass our compliance checks, a 422 Unprocessable Content is returned with a reason."
					},
					"response": [
						{
							"id": "6db86ab5-185a-429f-8ab6-c1a897587a22",
							"name": "Created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"ein\": \"<string>\",\n  \"user\": {\n    \"email\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\"\n  },\n  \"preferredName\": \"<string>\",\n  \"picture\": \"<string>\",\n  \"website\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/nonprofits",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"nonprofits"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"disabled": false,
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "X-Request-Id",
									"value": ""
								},
								{
									"disabled": false,
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "Location",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"ein\": \"<string>\",\n  \"preferredName\": \"<string>\",\n  \"suborganizations\": [\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"preferredName\": \"<string>\",\n      \"address\": {\n        \"city\": \"<string>\",\n        \"country\": \"<string>\",\n        \"line1\": \"<string>\",\n        \"postalCode\": \"<string>\",\n        \"state\": \"<string>\",\n        \"line2\": \"<string>\"\n      },\n      \"picture\": \"<string>\",\n      \"website\": \"<string>\",\n      \"createdAt\": \"<dateTime>\",\n      \"updatedAt\": \"<dateTime>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"preferredName\": \"<string>\",\n      \"address\": {\n        \"city\": \"<string>\",\n        \"country\": \"<string>\",\n        \"line1\": \"<string>\",\n        \"postalCode\": \"<string>\",\n        \"state\": \"<string>\",\n        \"line2\": \"<string>\"\n      },\n      \"picture\": \"<string>\",\n      \"website\": \"<string>\",\n      \"createdAt\": \"<dateTime>\",\n      \"updatedAt\": \"<dateTime>\"\n    }\n  ],\n  \"address\": {\n    \"city\": \"<string>\",\n    \"country\": \"<string>\",\n    \"line1\": \"<string>\",\n    \"postalCode\": \"<string>\",\n    \"state\": \"<string>\",\n    \"line2\": \"<string>\"\n  },\n  \"picture\": \"<string>\",\n  \"website\": \"<string>\",\n  \"createdAt\": \"<dateTime>\",\n  \"updatedAt\": \"<dateTime>\",\n  \"isDafPayNetwork\": \"<boolean>\",\n  \"inGoodStanding\": \"<boolean>\"\n}"
						},
						{
							"id": "f9ed8aa1-e9f3-4425-8ace-b6eaf43c8721",
							"name": "The request is invalid or contains invalid parameters",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"ein\": \"<string>\",\n  \"user\": {\n    \"email\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\"\n  },\n  \"preferredName\": \"<string>\",\n  \"picture\": \"<string>\",\n  \"website\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/nonprofits",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"nonprofits"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"disabled": false,
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "X-Request-Id",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n  \"timestamp\": \"<string>\",\n  \"code\": \"<number>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
						},
						{
							"id": "f17a981b-616e-45ae-be1c-0fa6e8b5b895",
							"name": "Unauthorized. The request is missing the security (OAuth2 Bearer token) requirements and the server is unable to verify the identify of the caller.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"ein\": \"<string>\",\n  \"user\": {\n    \"email\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\"\n  },\n  \"preferredName\": \"<string>\",\n  \"picture\": \"<string>\",\n  \"website\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/nonprofits",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"nonprofits"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"disabled": false,
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "X-Request-Id",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n  \"timestamp\": \"<string>\",\n  \"code\": \"<number>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
						},
						{
							"id": "569ca83f-aee5-4d47-b8ce-a3f9f37d8c55",
							"name": "Access denied",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"ein\": \"<string>\",\n  \"user\": {\n    \"email\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\"\n  },\n  \"preferredName\": \"<string>\",\n  \"picture\": \"<string>\",\n  \"website\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/nonprofits",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"nonprofits"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"disabled": false,
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "X-Request-Id",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n  \"timestamp\": \"<string>\",\n  \"code\": \"<number>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
						},
						{
							"id": "946378e2-136f-4a6e-84c3-6ec5804c9229",
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"ein\": \"<string>\",\n  \"user\": {\n    \"email\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\"\n  },\n  \"preferredName\": \"<string>\",\n  \"picture\": \"<string>\",\n  \"website\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/nonprofits",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"nonprofits"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"disabled": false,
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "X-Request-Id",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n  \"timestamp\": \"<string>\",\n  \"code\": \"<number>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
						},
						{
							"id": "395bd406-56e8-40a6-8732-0551a57e6af0",
							"name": "Resource Conflicts",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"ein\": \"<string>\",\n  \"user\": {\n    \"email\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\"\n  },\n  \"preferredName\": \"<string>\",\n  \"picture\": \"<string>\",\n  \"website\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/nonprofits",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"nonprofits"
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"disabled": false,
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "X-Request-Id",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n  \"timestamp\": \"<string>\",\n  \"code\": \"<number>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
						},
						{
							"id": "8faa096c-e78e-4fb3-8067-f3af47f9ffbf",
							"name": "Precondition Failed",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"ein\": \"<string>\",\n  \"user\": {\n    \"email\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\"\n  },\n  \"preferredName\": \"<string>\",\n  \"picture\": \"<string>\",\n  \"website\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/nonprofits",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"nonprofits"
									]
								}
							},
							"status": "Precondition Failed",
							"code": 412,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"disabled": false,
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "X-Request-Id",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n  \"timestamp\": \"<string>\",\n  \"code\": \"<number>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
						},
						{
							"id": "1d01ab04-343f-4587-827f-6f01121e25c5",
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"ein\": \"<string>\",\n  \"user\": {\n    \"email\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\"\n  },\n  \"preferredName\": \"<string>\",\n  \"picture\": \"<string>\",\n  \"website\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/nonprofits",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"nonprofits"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"disabled": false,
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "X-Request-Id",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n  \"timestamp\": \"<string>\",\n  \"code\": \"<number>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
						}
					]
				}
			],
			"id": "724e3a6e-5b5a-4d5b-944d-e6f945f19e96"
		},
		{
			"name": "Connects",
			"item": [
				{
					"name": "Create Connect",
					"id": "d8aa6cc7-ac45-4879-9fa0-36f7068481cd",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "scope",
									"value": "create:nonprofits read:nonprofits create:connects read:connects create:grants read:grants update:grants read:events create:event_subscriptions read:event_subscriptions update:event_subscriptions",
									"type": "string"
								},
								{
									"key": "accessTokenUrl",
									"value": "https://login.givechariot.com/oauth/token",
									"type": "string"
								},
								{
									"key": "grant_type",
									"value": "client_credentials",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"<string>\",\n  \"metadata\": {\n    \"cupidatatf\": \"<string>\",\n    \"aliquad\": \"<string>\"\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/connects?nonprofit=<uuid>&suborganization=<uuid>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"connects"
							],
							"query": [
								{
									"description": "(Required) The unique identifier (ID) for the nonprofit.\nThe format should be a v4 UUID according to RFC 4122.\nThis can be found by calling the /v1/nonprofit/{ein} API endpoint.",
									"key": "nonprofit",
									"value": "<uuid>"
								},
								{
									"description": "The unique identifier (ID) for the suborganization within the nonprofit.\nThe format should be a v4 UUID according to RFC 4122.\nThis can be found by calling the /v1/nonprofit/{ein} API endpoint.",
									"key": "suborganization",
									"value": "<uuid>"
								}
							]
						},
						"description": "Get or create a Connect object. Only one Connect object can be created per Nonprofit for a given Fundraising Application. If one already exists, this will return a 200 status with the existing object. The returned Connect can be used to integrate the client-side Chariot Connect component using the id property (CID) and also query for data generated from the Chariot Connect instance from the Chariot API using the apiKey property."
					},
					"response": [
						{
							"id": "ae134dcc-9f59-4979-89ec-36109ce01d46",
							"name": "the existing Connect object",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"metadata\": {\n    \"cupidatatf\": \"<string>\",\n    \"aliquad\": \"<string>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/connects?nonprofit=<uuid>&suborganization=<uuid>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"connects"
									],
									"query": [
										{
											"description": "(Required) The unique identifier (ID) for the nonprofit.\nThe format should be a v4 UUID according to RFC 4122.\nThis can be found by calling the /v1/nonprofit/{ein} API endpoint.",
											"key": "nonprofit",
											"value": "<uuid>"
										},
										{
											"description": "The unique identifier (ID) for the suborganization within the nonprofit.\nThe format should be a v4 UUID according to RFC 4122.\nThis can be found by calling the /v1/nonprofit/{ein} API endpoint.",
											"key": "suborganization",
											"value": "<uuid>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"disabled": false,
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "X-Request-Id",
									"value": ""
								},
								{
									"disabled": false,
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "Location",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"apiKey\": \"<string>\",\n  \"fundraisingApplicationId\": \"<string>\",\n  \"active\": \"<boolean>\",\n  \"createdAt\": \"<dateTime>\",\n  \"updatedAt\": \"<dateTime>\",\n  \"createdBy\": \"<string>\",\n  \"archived\": \"<boolean>\",\n  \"metadata\": {\n    \"sed_7\": \"<string>\",\n    \"ut_d9\": \"<string>\",\n    \"magna258\": \"<string>\",\n    \"id_5\": \"<string>\"\n  }\n}"
						},
						{
							"id": "be9b4d64-884f-4c2d-be1e-96c31670f678",
							"name": "the created connect object",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"metadata\": {\n    \"cupidatatf\": \"<string>\",\n    \"aliquad\": \"<string>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/connects?nonprofit=<uuid>&suborganization=<uuid>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"connects"
									],
									"query": [
										{
											"description": "(Required) The unique identifier (ID) for the nonprofit.\nThe format should be a v4 UUID according to RFC 4122.\nThis can be found by calling the /v1/nonprofit/{ein} API endpoint.",
											"key": "nonprofit",
											"value": "<uuid>"
										},
										{
											"description": "The unique identifier (ID) for the suborganization within the nonprofit.\nThe format should be a v4 UUID according to RFC 4122.\nThis can be found by calling the /v1/nonprofit/{ein} API endpoint.",
											"key": "suborganization",
											"value": "<uuid>"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"disabled": false,
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "X-Request-Id",
									"value": ""
								},
								{
									"disabled": false,
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "Location",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"apiKey\": \"<string>\",\n  \"fundraisingApplicationId\": \"<string>\",\n  \"active\": \"<boolean>\",\n  \"createdAt\": \"<dateTime>\",\n  \"updatedAt\": \"<dateTime>\",\n  \"createdBy\": \"<string>\",\n  \"archived\": \"<boolean>\",\n  \"metadata\": {\n    \"sed_7\": \"<string>\",\n    \"ut_d9\": \"<string>\",\n    \"magna258\": \"<string>\",\n    \"id_5\": \"<string>\"\n  }\n}"
						},
						{
							"id": "aa53e233-babf-47e2-8382-96ab58c2ae74",
							"name": "The request is invalid or contains invalid parameters",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"metadata\": {\n    \"cupidatatf\": \"<string>\",\n    \"aliquad\": \"<string>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/connects?nonprofit=<uuid>&suborganization=<uuid>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"connects"
									],
									"query": [
										{
											"description": "(Required) The unique identifier (ID) for the nonprofit.\nThe format should be a v4 UUID according to RFC 4122.\nThis can be found by calling the /v1/nonprofit/{ein} API endpoint.",
											"key": "nonprofit",
											"value": "<uuid>"
										},
										{
											"description": "The unique identifier (ID) for the suborganization within the nonprofit.\nThe format should be a v4 UUID according to RFC 4122.\nThis can be found by calling the /v1/nonprofit/{ein} API endpoint.",
											"key": "suborganization",
											"value": "<uuid>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"disabled": false,
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "X-Request-Id",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n  \"timestamp\": \"<string>\",\n  \"code\": \"<number>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
						},
						{
							"id": "826c5699-f8fc-480e-a4ac-aec46e28f7a3",
							"name": "Unauthorized. The request is missing the security (OAuth2 Bearer token) requirements and the server is unable to verify the identify of the caller.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"metadata\": {\n    \"cupidatatf\": \"<string>\",\n    \"aliquad\": \"<string>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/connects?nonprofit=<uuid>&suborganization=<uuid>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"connects"
									],
									"query": [
										{
											"description": "(Required) The unique identifier (ID) for the nonprofit.\nThe format should be a v4 UUID according to RFC 4122.\nThis can be found by calling the /v1/nonprofit/{ein} API endpoint.",
											"key": "nonprofit",
											"value": "<uuid>"
										},
										{
											"description": "The unique identifier (ID) for the suborganization within the nonprofit.\nThe format should be a v4 UUID according to RFC 4122.\nThis can be found by calling the /v1/nonprofit/{ein} API endpoint.",
											"key": "suborganization",
											"value": "<uuid>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"disabled": false,
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "X-Request-Id",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n  \"timestamp\": \"<string>\",\n  \"code\": \"<number>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
						},
						{
							"id": "9340b2f0-dcc3-4658-b3cd-47c4b7aff807",
							"name": "Access denied",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"metadata\": {\n    \"cupidatatf\": \"<string>\",\n    \"aliquad\": \"<string>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/connects?nonprofit=<uuid>&suborganization=<uuid>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"connects"
									],
									"query": [
										{
											"description": "(Required) The unique identifier (ID) for the nonprofit.\nThe format should be a v4 UUID according to RFC 4122.\nThis can be found by calling the /v1/nonprofit/{ein} API endpoint.",
											"key": "nonprofit",
											"value": "<uuid>"
										},
										{
											"description": "The unique identifier (ID) for the suborganization within the nonprofit.\nThe format should be a v4 UUID according to RFC 4122.\nThis can be found by calling the /v1/nonprofit/{ein} API endpoint.",
											"key": "suborganization",
											"value": "<uuid>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"disabled": false,
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "X-Request-Id",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n  \"timestamp\": \"<string>\",\n  \"code\": \"<number>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
						},
						{
							"id": "72cf3e9a-9f93-4609-8463-7126327e8d71",
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"metadata\": {\n    \"cupidatatf\": \"<string>\",\n    \"aliquad\": \"<string>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/connects?nonprofit=<uuid>&suborganization=<uuid>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"connects"
									],
									"query": [
										{
											"description": "(Required) The unique identifier (ID) for the nonprofit.\nThe format should be a v4 UUID according to RFC 4122.\nThis can be found by calling the /v1/nonprofit/{ein} API endpoint.",
											"key": "nonprofit",
											"value": "<uuid>"
										},
										{
											"description": "The unique identifier (ID) for the suborganization within the nonprofit.\nThe format should be a v4 UUID according to RFC 4122.\nThis can be found by calling the /v1/nonprofit/{ein} API endpoint.",
											"key": "suborganization",
											"value": "<uuid>"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"disabled": false,
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "X-Request-Id",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n  \"timestamp\": \"<string>\",\n  \"code\": \"<number>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
						},
						{
							"id": "2db2aa48-ee8d-4b10-bfaa-309997fab01d",
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"metadata\": {\n    \"cupidatatf\": \"<string>\",\n    \"aliquad\": \"<string>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/connects?nonprofit=<uuid>&suborganization=<uuid>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"connects"
									],
									"query": [
										{
											"description": "(Required) The unique identifier (ID) for the nonprofit.\nThe format should be a v4 UUID according to RFC 4122.\nThis can be found by calling the /v1/nonprofit/{ein} API endpoint.",
											"key": "nonprofit",
											"value": "<uuid>"
										},
										{
											"description": "The unique identifier (ID) for the suborganization within the nonprofit.\nThe format should be a v4 UUID according to RFC 4122.\nThis can be found by calling the /v1/nonprofit/{ein} API endpoint.",
											"key": "suborganization",
											"value": "<uuid>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"disabled": false,
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "X-Request-Id",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n  \"timestamp\": \"<string>\",\n  \"code\": \"<number>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Get Connect",
					"id": "caf1cf88-2b97-454b-b97c-08655033a04f",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "scope",
									"value": "create:nonprofits read:nonprofits create:connects read:connects create:grants read:grants update:grants read:events create:event_subscriptions read:event_subscriptions update:event_subscriptions",
									"type": "string"
								},
								{
									"key": "accessTokenUrl",
									"value": "https://login.givechariot.com/oauth/token",
									"type": "string"
								},
								{
									"key": "grant_type",
									"value": "client_credentials",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/connects/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"connects",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<string>",
									"description": "(Required) the unique id of the connect"
								}
							]
						},
						"description": "Get a Connect object with the unique identifier (CID)"
					},
					"response": [
						{
							"id": "1ab22d9c-7f7a-4dfd-92dd-660db4d67c66",
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/connects/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"connects",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"disabled": false,
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "X-Request-Id",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"apiKey\": \"<string>\",\n  \"fundraisingApplicationId\": \"<string>\",\n  \"active\": \"<boolean>\",\n  \"createdAt\": \"<dateTime>\",\n  \"updatedAt\": \"<dateTime>\",\n  \"createdBy\": \"<string>\",\n  \"archived\": \"<boolean>\",\n  \"metadata\": {\n    \"sed_7\": \"<string>\",\n    \"ut_d9\": \"<string>\",\n    \"magna258\": \"<string>\",\n    \"id_5\": \"<string>\"\n  }\n}"
						},
						{
							"id": "edf7d40b-5a05-4b26-83ef-4d91d099289c",
							"name": "The request is invalid or contains invalid parameters",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/connects/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"connects",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"disabled": false,
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "X-Request-Id",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n  \"timestamp\": \"<string>\",\n  \"code\": \"<number>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
						},
						{
							"id": "fbb25ccb-7307-4803-95ed-cea57d5de531",
							"name": "Unauthorized. The request is missing the security (OAuth2 Bearer token) requirements and the server is unable to verify the identify of the caller.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/connects/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"connects",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"disabled": false,
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "X-Request-Id",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n  \"timestamp\": \"<string>\",\n  \"code\": \"<number>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
						},
						{
							"id": "1466776f-65f7-46af-845c-f8b4746e4d67",
							"name": "Access denied",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/connects/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"connects",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"disabled": false,
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "X-Request-Id",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n  \"timestamp\": \"<string>\",\n  \"code\": \"<number>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
						},
						{
							"id": "d4b0733a-709b-4552-9698-480a1dc51c8b",
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/connects/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"connects",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"disabled": false,
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "X-Request-Id",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n  \"timestamp\": \"<string>\",\n  \"code\": \"<number>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
						},
						{
							"id": "4468dc94-3693-4f63-b373-d5cbeb1fc5fc",
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/connects/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"connects",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"disabled": false,
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "X-Request-Id",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n  \"timestamp\": \"<string>\",\n  \"code\": \"<number>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
						}
					]
				}
			],
			"id": "f2350981-9577-40dc-9493-9e8dba32e852"
		},
		{
			"name": "Grants",
			"item": [
				{
					"name": "List Grants",
					"id": "ed0da1b5-fd61-4da0-bde6-b8c44fc2a84e",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "scope",
									"value": "create:nonprofits read:nonprofits create:connects read:connects create:grants read:grants update:grants read:events create:event_subscriptions read:event_subscriptions update:event_subscriptions",
									"type": "string"
								},
								{
									"key": "accessTokenUrl",
									"value": "https://login.givechariot.com/oauth/token",
									"type": "string"
								},
								{
									"key": "grant_type",
									"value": "client_credentials",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/grants?pageLimit=10&pageToken=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"grants"
							],
							"query": [
								{
									"description": "the number of results to return; defaults to 10, max is 100",
									"key": "pageLimit",
									"value": "10"
								},
								{
									"description": "A token to use to retrieve the next page of results. This is useful for paginating over many pages of results. If set, all other arguments are expected to be kept the same as previous calls and the value of this field should be from the nextPageToken in the previous response.",
									"key": "pageToken",
									"value": "<string>"
								}
							]
						},
						"description": "List all grants for the provided API Key. This API allows for paginating over many results."
					},
					"response": [
						{
							"id": "e47ad93d-2fb0-474c-b973-0d28d0806f66",
							"name": "The response for Grants.list",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/grants?pageLimit=10&pageToken=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"grants"
									],
									"query": [
										{
											"description": "the number of results to return; defaults to 10, max is 100",
											"key": "pageLimit",
											"value": "10"
										},
										{
											"description": "A token to use to retrieve the next page of results. This is useful for paginating over many pages of results. If set, all other arguments are expected to be kept the same as previous calls and the value of this field should be from the nextPageToken in the previous response.",
											"key": "pageToken",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"disabled": false,
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "X-Request-Id",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n  \"results\": [\n    {\n      \"id\": \"<uuid>\",\n      \"workflowSessionId\": \"<uuid>\",\n      \"fundId\": \"<string>\",\n      \"amount\": \"<number>\",\n      \"userFriendlyId\": \"<string>\",\n      \"trackingId\": \"<string>\",\n      \"externalGrantId\": \"<string>\",\n      \"createdAt\": \"<dateTime>\",\n      \"updatedAt\": \"<dateTime>\",\n      \"status\": \"<string>\",\n      \"feeDetail\": {\n        \"total\": \"<number>\",\n        \"contributions\": [\n          {\n            \"name\": \"<string>\",\n            \"amount\": \"<number>\"\n          },\n          {\n            \"name\": \"<string>\",\n            \"amount\": \"<number>\"\n          }\n        ]\n      },\n      \"metadata\": {\n        \"occaecat_99c\": \"<string>\"\n      },\n      \"firstName\": \"<string>\",\n      \"lastName\": \"<string>\",\n      \"phone\": \"<string>\",\n      \"email\": \"<string>\",\n      \"note\": \"<string>\",\n      \"statuses\": [\n        {\n          \"id\": \"<uuid>\",\n          \"createdAt\": \"<dateTime>\",\n          \"status\": \"Initiated\",\n          \"comment\": \"<string>\"\n        },\n        {\n          \"id\": \"<uuid>\",\n          \"createdAt\": \"<dateTime>\",\n          \"status\": \"Processing\",\n          \"comment\": \"<string>\"\n        }\n      ],\n      \"paymentChannel\": \"direct\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"workflowSessionId\": \"<uuid>\",\n      \"fundId\": \"<string>\",\n      \"amount\": \"<number>\",\n      \"userFriendlyId\": \"<string>\",\n      \"trackingId\": \"<string>\",\n      \"externalGrantId\": \"<string>\",\n      \"createdAt\": \"<dateTime>\",\n      \"updatedAt\": \"<dateTime>\",\n      \"status\": \"<string>\",\n      \"feeDetail\": {\n        \"total\": \"<number>\",\n        \"contributions\": [\n          {\n            \"name\": \"<string>\",\n            \"amount\": \"<number>\"\n          },\n          {\n            \"name\": \"<string>\",\n            \"amount\": \"<number>\"\n          }\n        ]\n      },\n      \"metadata\": {\n        \"deseruntb\": \"<string>\",\n        \"anim_d\": \"<string>\"\n      },\n      \"firstName\": \"<string>\",\n      \"lastName\": \"<string>\",\n      \"phone\": \"<string>\",\n      \"email\": \"<string>\",\n      \"note\": \"<string>\",\n      \"statuses\": [\n        {\n          \"id\": \"<uuid>\",\n          \"createdAt\": \"<dateTime>\",\n          \"status\": \"Received\",\n          \"comment\": \"<string>\"\n        },\n        {\n          \"id\": \"<uuid>\",\n          \"createdAt\": \"<dateTime>\",\n          \"status\": \"Completed\",\n          \"comment\": \"<string>\"\n        }\n      ],\n      \"paymentChannel\": \"direct\"\n    }\n  ],\n  \"nextPageToken\": \"<string>\"\n}"
						},
						{
							"id": "1d33bcfb-6332-42bf-878a-5a75e0997af2",
							"name": "The request is invalid or contains invalid parameters",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/grants?pageLimit=10&pageToken=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"grants"
									],
									"query": [
										{
											"description": "the number of results to return; defaults to 10, max is 100",
											"key": "pageLimit",
											"value": "10"
										},
										{
											"description": "A token to use to retrieve the next page of results. This is useful for paginating over many pages of results. If set, all other arguments are expected to be kept the same as previous calls and the value of this field should be from the nextPageToken in the previous response.",
											"key": "pageToken",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"disabled": false,
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "X-Request-Id",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n  \"timestamp\": \"<string>\",\n  \"code\": \"<number>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
						},
						{
							"id": "62172c6d-75c4-4a5f-bca6-ccdb46919050",
							"name": "Unauthorized. The request is missing the security (OAuth2 Bearer token) requirements and the server is unable to verify the identify of the caller.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/grants?pageLimit=10&pageToken=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"grants"
									],
									"query": [
										{
											"description": "the number of results to return; defaults to 10, max is 100",
											"key": "pageLimit",
											"value": "10"
										},
										{
											"description": "A token to use to retrieve the next page of results. This is useful for paginating over many pages of results. If set, all other arguments are expected to be kept the same as previous calls and the value of this field should be from the nextPageToken in the previous response.",
											"key": "pageToken",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"disabled": false,
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "X-Request-Id",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n  \"timestamp\": \"<string>\",\n  \"code\": \"<number>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
						},
						{
							"id": "a63188d4-7cba-4eba-8aa4-2e6c3b43bc2c",
							"name": "Access denied",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/grants?pageLimit=10&pageToken=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"grants"
									],
									"query": [
										{
											"description": "the number of results to return; defaults to 10, max is 100",
											"key": "pageLimit",
											"value": "10"
										},
										{
											"description": "A token to use to retrieve the next page of results. This is useful for paginating over many pages of results. If set, all other arguments are expected to be kept the same as previous calls and the value of this field should be from the nextPageToken in the previous response.",
											"key": "pageToken",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"disabled": false,
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "X-Request-Id",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n  \"timestamp\": \"<string>\",\n  \"code\": \"<number>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
						},
						{
							"id": "ebe4df83-2b1a-4dcf-abb6-1e191c38ab3f",
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/grants?pageLimit=10&pageToken=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"grants"
									],
									"query": [
										{
											"description": "the number of results to return; defaults to 10, max is 100",
											"key": "pageLimit",
											"value": "10"
										},
										{
											"description": "A token to use to retrieve the next page of results. This is useful for paginating over many pages of results. If set, all other arguments are expected to be kept the same as previous calls and the value of this field should be from the nextPageToken in the previous response.",
											"key": "pageToken",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"disabled": false,
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "X-Request-Id",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n  \"timestamp\": \"<string>\",\n  \"code\": \"<number>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Create Grant",
					"id": "8d7aed60-5e82-4599-a051-189851c8c9c5",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "scope",
									"value": "create:nonprofits read:nonprofits create:connects read:connects create:grants read:grants update:grants read:events create:event_subscriptions read:event_subscriptions update:event_subscriptions",
									"type": "string"
								},
								{
									"key": "accessTokenUrl",
									"value": "https://login.givechariot.com/oauth/token",
									"type": "string"
								},
								{
									"key": "grant_type",
									"value": "client_credentials",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"workflowSessionId\": \"<string>\",\n  \"amount\": \"<number>\",\n  \"applicationFeeAmount\": \"<number>\",\n  \"donor\": {\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"phone\": \"<string>\"\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/grants",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"grants"
							]
						},
						"description": "Create a grant from a workflow session. This is useful to capture a grant intent from an authorized connect workflow session and submit the grant request.\nThe grant must be captured within 5 minutes of authorization otherwise the request will return status 410 Gone.\nA grant can only be captured once from any given workflow session so any duplicate requests will return status 409 Conflict.\nThe grant amount must be in whole dollar increments (rounded to the nearest hundred) as currently DAFs only accept whole dollar grants.\nThe grant amount must be greater than or equal to the minimum grant amount for the DAF otherwise the request will return status 400 Bad Request.\nThe grant amount must be less than or equal to the user's DAF account balance otherwise the request will return status 400 Bad Request."
					},
					"response": [
						{
							"id": "3ed9c88a-e2dc-425e-9a04-78404f7ef055",
							"name": "Created grant",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"workflowSessionId\": \"<string>\",\n  \"amount\": \"<number>\",\n  \"applicationFeeAmount\": \"<number>\",\n  \"donor\": {\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"phone\": \"<string>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/grants",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"grants"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"disabled": false,
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "X-Request-Id",
									"value": ""
								},
								{
									"disabled": false,
									"description": {
										"content": "The URI reference of the created grant object.",
										"type": "text/plain"
									},
									"key": "Location",
									"value": "<uri>"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<uuid>\",\n  \"workflowSessionId\": \"<uuid>\",\n  \"fundId\": \"<string>\",\n  \"amount\": \"<number>\",\n  \"userFriendlyId\": \"<string>\",\n  \"trackingId\": \"<string>\",\n  \"externalGrantId\": \"<string>\",\n  \"createdAt\": \"<dateTime>\",\n  \"updatedAt\": \"<dateTime>\",\n  \"status\": \"<string>\",\n  \"feeDetail\": {\n    \"total\": \"<number>\",\n    \"contributions\": [\n      {\n        \"name\": \"<string>\",\n        \"amount\": \"<number>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"amount\": \"<number>\"\n      }\n    ]\n  },\n  \"metadata\": {\n    \"voluptatea\": \"<string>\",\n    \"fugiatb\": \"<string>\"\n  },\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"phone\": \"<string>\",\n  \"email\": \"<string>\",\n  \"note\": \"<string>\",\n  \"statuses\": [\n    {\n      \"id\": \"<uuid>\",\n      \"createdAt\": \"<dateTime>\",\n      \"status\": \"Processing\",\n      \"comment\": \"<string>\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"createdAt\": \"<dateTime>\",\n      \"status\": \"Initiated\",\n      \"comment\": \"<string>\"\n    }\n  ],\n  \"paymentChannel\": \"dafpay_network\"\n}"
						},
						{
							"id": "dd8f1ebe-3d1d-4bc1-9698-f4c9945960fa",
							"name": "The request is invalid or contains invalid parameters",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"workflowSessionId\": \"<string>\",\n  \"amount\": \"<number>\",\n  \"applicationFeeAmount\": \"<number>\",\n  \"donor\": {\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"phone\": \"<string>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/grants",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"grants"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"disabled": false,
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "X-Request-Id",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n  \"timestamp\": \"<string>\",\n  \"code\": \"<number>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
						},
						{
							"id": "7a53daa1-5e19-47c5-9213-304379e5390b",
							"name": "Unauthorized. The request is missing the security (OAuth2 Bearer token) requirements and the server is unable to verify the identify of the caller.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"workflowSessionId\": \"<string>\",\n  \"amount\": \"<number>\",\n  \"applicationFeeAmount\": \"<number>\",\n  \"donor\": {\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"phone\": \"<string>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/grants",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"grants"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"disabled": false,
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "X-Request-Id",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n  \"timestamp\": \"<string>\",\n  \"code\": \"<number>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
						},
						{
							"id": "d7eef3e4-c085-498c-a45d-9e7c3105ce39",
							"name": "Access denied",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"workflowSessionId\": \"<string>\",\n  \"amount\": \"<number>\",\n  \"applicationFeeAmount\": \"<number>\",\n  \"donor\": {\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"phone\": \"<string>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/grants",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"grants"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"disabled": false,
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "X-Request-Id",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n  \"timestamp\": \"<string>\",\n  \"code\": \"<number>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
						},
						{
							"id": "18e50e38-07e4-401f-ac4b-14ead3f1510d",
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"workflowSessionId\": \"<string>\",\n  \"amount\": \"<number>\",\n  \"applicationFeeAmount\": \"<number>\",\n  \"donor\": {\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"phone\": \"<string>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/grants",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"grants"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"disabled": false,
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "X-Request-Id",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n  \"timestamp\": \"<string>\",\n  \"code\": \"<number>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
						},
						{
							"id": "97e838cb-7757-42ec-a8ac-b593c3389323",
							"name": "Resource Conflicts",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"workflowSessionId\": \"<string>\",\n  \"amount\": \"<number>\",\n  \"applicationFeeAmount\": \"<number>\",\n  \"donor\": {\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"phone\": \"<string>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/grants",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"grants"
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"disabled": false,
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "X-Request-Id",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n  \"timestamp\": \"<string>\",\n  \"code\": \"<number>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
						},
						{
							"id": "3a87f3a7-4f89-4ca7-8314-72982631379e",
							"name": "Resource Gone or Expired",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"workflowSessionId\": \"<string>\",\n  \"amount\": \"<number>\",\n  \"applicationFeeAmount\": \"<number>\",\n  \"donor\": {\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"phone\": \"<string>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/grants",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"grants"
									]
								}
							},
							"status": "Gone",
							"code": 410,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"disabled": false,
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "X-Request-Id",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n  \"timestamp\": \"<string>\",\n  \"code\": \"<number>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
						},
						{
							"id": "6e5101ef-ab85-44a8-930f-fe24e1d30ddd",
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"workflowSessionId\": \"<string>\",\n  \"amount\": \"<number>\",\n  \"applicationFeeAmount\": \"<number>\",\n  \"donor\": {\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"phone\": \"<string>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/grants",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"grants"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"disabled": false,
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "X-Request-Id",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n  \"timestamp\": \"<string>\",\n  \"code\": \"<number>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Get Grant",
					"id": "976f26fa-bc44-45fa-ad91-719c8de48a6a",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "scope",
									"value": "create:nonprofits read:nonprofits create:connects read:connects create:grants read:grants update:grants read:events create:event_subscriptions read:event_subscriptions update:event_subscriptions",
									"type": "string"
								},
								{
									"key": "accessTokenUrl",
									"value": "https://login.givechariot.com/oauth/token",
									"type": "string"
								},
								{
									"key": "grant_type",
									"value": "client_credentials",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/grants/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"grants",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<uuid>",
									"description": "(Required) the unique id of the grant"
								}
							]
						},
						"description": "Get a grant object generated by Chariot Connect.\nIf the grant does not exist, returns a 404 status.\nIf the provided ID is not a v4 UUID according to RFC 4122, returns a 400 status."
					},
					"response": [
						{
							"id": "65148af4-7758-4404-8cc4-f53dbbeeb83e",
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/grants/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"grants",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"disabled": false,
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "X-Request-Id",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<uuid>\",\n  \"workflowSessionId\": \"<uuid>\",\n  \"fundId\": \"<string>\",\n  \"amount\": \"<number>\",\n  \"userFriendlyId\": \"<string>\",\n  \"trackingId\": \"<string>\",\n  \"externalGrantId\": \"<string>\",\n  \"createdAt\": \"<dateTime>\",\n  \"updatedAt\": \"<dateTime>\",\n  \"status\": \"<string>\",\n  \"feeDetail\": {\n    \"total\": \"<number>\",\n    \"contributions\": [\n      {\n        \"name\": \"<string>\",\n        \"amount\": \"<number>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"amount\": \"<number>\"\n      }\n    ]\n  },\n  \"metadata\": {\n    \"voluptatea\": \"<string>\",\n    \"fugiatb\": \"<string>\"\n  },\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"phone\": \"<string>\",\n  \"email\": \"<string>\",\n  \"note\": \"<string>\",\n  \"statuses\": [\n    {\n      \"id\": \"<uuid>\",\n      \"createdAt\": \"<dateTime>\",\n      \"status\": \"Processing\",\n      \"comment\": \"<string>\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"createdAt\": \"<dateTime>\",\n      \"status\": \"Initiated\",\n      \"comment\": \"<string>\"\n    }\n  ],\n  \"paymentChannel\": \"dafpay_network\"\n}"
						},
						{
							"id": "b500a6a7-84f7-4742-9edf-2593d5227dbc",
							"name": "The request is invalid or contains invalid parameters",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/grants/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"grants",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"disabled": false,
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "X-Request-Id",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n  \"timestamp\": \"<string>\",\n  \"code\": \"<number>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
						},
						{
							"id": "1b439c82-3087-49eb-a64b-9f42cae8669e",
							"name": "Unauthorized. The request is missing the security (OAuth2 Bearer token) requirements and the server is unable to verify the identify of the caller.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/grants/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"grants",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"disabled": false,
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "X-Request-Id",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n  \"timestamp\": \"<string>\",\n  \"code\": \"<number>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
						},
						{
							"id": "09e2ad74-980b-46fb-b307-24c55131de2e",
							"name": "Access denied",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/grants/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"grants",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"disabled": false,
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "X-Request-Id",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n  \"timestamp\": \"<string>\",\n  \"code\": \"<number>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
						},
						{
							"id": "3e6f11c1-16a4-4964-849b-b9d59e1bb98e",
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/grants/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"grants",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"disabled": false,
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "X-Request-Id",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n  \"timestamp\": \"<string>\",\n  \"code\": \"<number>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
						},
						{
							"id": "06491be9-0753-44fb-8189-cedbf502dbe5",
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/grants/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"grants",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"disabled": false,
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "X-Request-Id",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n  \"timestamp\": \"<string>\",\n  \"code\": \"<number>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Update Grant",
					"id": "84d7cf99-385a-4b42-85db-a247a18b54fe",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "scope",
									"value": "create:nonprofits read:nonprofits create:connects read:connects create:grants read:grants update:grants read:events create:event_subscriptions read:event_subscriptions update:event_subscriptions",
									"type": "string"
								},
								{
									"key": "accessTokenUrl",
									"value": "https://login.givechariot.com/oauth/token",
									"type": "string"
								},
								{
									"key": "grant_type",
									"value": "client_credentials",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"status\": \"Completed\",\n  \"acknowledgedAt\": \"<dateTime>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/grants/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"grants",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<uuid>",
									"description": "(Required) the unique id of the grant"
								}
							]
						},
						"description": "Update a grant object generated by Chariot Connect.\nThis is useful to update the status or acknowledgement of the grant.\nIf the grant does not exist, returns a 404 status.\nIf the provided ID is not a v4 UUID according to RFC 4122, returns a 400 status."
					},
					"response": [
						{
							"id": "3a275dfa-0321-4cf6-9ad0-77d12dd03e7e",
							"name": "OK",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"status\": \"Completed\",\n  \"acknowledgedAt\": \"<dateTime>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/grants/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"grants",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"disabled": false,
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "X-Request-Id",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<uuid>\",\n  \"workflowSessionId\": \"<uuid>\",\n  \"fundId\": \"<string>\",\n  \"amount\": \"<number>\",\n  \"userFriendlyId\": \"<string>\",\n  \"trackingId\": \"<string>\",\n  \"externalGrantId\": \"<string>\",\n  \"createdAt\": \"<dateTime>\",\n  \"updatedAt\": \"<dateTime>\",\n  \"status\": \"<string>\",\n  \"feeDetail\": {\n    \"total\": \"<number>\",\n    \"contributions\": [\n      {\n        \"name\": \"<string>\",\n        \"amount\": \"<number>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"amount\": \"<number>\"\n      }\n    ]\n  },\n  \"metadata\": {\n    \"voluptatea\": \"<string>\",\n    \"fugiatb\": \"<string>\"\n  },\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"phone\": \"<string>\",\n  \"email\": \"<string>\",\n  \"note\": \"<string>\",\n  \"statuses\": [\n    {\n      \"id\": \"<uuid>\",\n      \"createdAt\": \"<dateTime>\",\n      \"status\": \"Processing\",\n      \"comment\": \"<string>\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"createdAt\": \"<dateTime>\",\n      \"status\": \"Initiated\",\n      \"comment\": \"<string>\"\n    }\n  ],\n  \"paymentChannel\": \"dafpay_network\"\n}"
						},
						{
							"id": "63d735d3-355e-47f8-a674-a1c216ef1d75",
							"name": "The request is invalid or contains invalid parameters",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"status\": \"Completed\",\n  \"acknowledgedAt\": \"<dateTime>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/grants/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"grants",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"disabled": false,
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "X-Request-Id",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n  \"timestamp\": \"<string>\",\n  \"code\": \"<number>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
						},
						{
							"id": "8120b37a-613a-4cfe-8637-c63baaca755e",
							"name": "Unauthorized. The request is missing the security (OAuth2 Bearer token) requirements and the server is unable to verify the identify of the caller.",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"status\": \"Completed\",\n  \"acknowledgedAt\": \"<dateTime>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/grants/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"grants",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"disabled": false,
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "X-Request-Id",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n  \"timestamp\": \"<string>\",\n  \"code\": \"<number>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
						},
						{
							"id": "c77ceb43-2fdf-4b12-a393-98089cf9bd89",
							"name": "Access denied",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"status\": \"Completed\",\n  \"acknowledgedAt\": \"<dateTime>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/grants/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"grants",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"disabled": false,
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "X-Request-Id",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n  \"timestamp\": \"<string>\",\n  \"code\": \"<number>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
						},
						{
							"id": "cc67fe62-310d-4038-8de6-661e89e96f6b",
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"status\": \"Completed\",\n  \"acknowledgedAt\": \"<dateTime>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/grants/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"grants",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"disabled": false,
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "X-Request-Id",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n  \"timestamp\": \"<string>\",\n  \"code\": \"<number>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
						},
						{
							"id": "8a0fe0e6-338b-419c-9e1e-5743ee6c5f14",
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"status\": \"Completed\",\n  \"acknowledgedAt\": \"<dateTime>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/grants/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"grants",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"disabled": false,
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "X-Request-Id",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n  \"timestamp\": \"<string>\",\n  \"code\": \"<number>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "List Unintegrated Grants",
					"id": "3f603679-4a6d-4560-878b-70fabdc8afee",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "scope",
									"value": "create:nonprofits read:nonprofits create:connects read:connects create:grants read:grants update:grants read:events create:event_subscriptions read:event_subscriptions update:event_subscriptions",
									"type": "string"
								},
								{
									"key": "accessTokenUrl",
									"value": "https://login.givechariot.com/oauth/token",
									"type": "string"
								},
								{
									"key": "grant_type",
									"value": "client_credentials",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/unintegrated_grants?pageLimit=10&pageToken=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"unintegrated_grants"
							],
							"query": [
								{
									"description": "the number of results to return; defaults to 10, max is 100",
									"key": "pageLimit",
									"value": "10"
								},
								{
									"description": "A token to use to retrieve the next page of results. This is useful for paginating over many pages of results. If set, all other arguments are expected to be kept the same as previous calls and the value of this field should be from the nextPageToken in the previous response.",
									"key": "pageToken",
									"value": "<string>"
								}
							]
						},
						"description": "List all unintegrated grants for the provided API Key. This API allows for paginating over many results."
					},
					"response": [
						{
							"id": "5336f4ee-8e73-4541-9c56-4fc3dc50d2c0",
							"name": "The response for UnintegratedGrants.list",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/unintegrated_grants?pageLimit=10&pageToken=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"unintegrated_grants"
									],
									"query": [
										{
											"description": "the number of results to return; defaults to 10, max is 100",
											"key": "pageLimit",
											"value": "10"
										},
										{
											"description": "A token to use to retrieve the next page of results. This is useful for paginating over many pages of results. If set, all other arguments are expected to be kept the same as previous calls and the value of this field should be from the nextPageToken in the previous response.",
											"key": "pageToken",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"disabled": false,
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "X-Request-Id",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n  \"results\": [\n    {\n      \"id\": \"<uuid>\",\n      \"workflowSessionId\": \"<uuid>\",\n      \"fundId\": \"<string>\",\n      \"amount\": \"<number>\",\n      \"userFriendlyId\": \"<string>\",\n      \"createdAt\": \"<dateTime>\",\n      \"updatedAt\": \"<dateTime>\",\n      \"status\": \"Completed\",\n      \"metadata\": {\n        \"deserunt_c4\": \"<string>\",\n        \"sintd5\": \"<string>\",\n        \"ea8\": \"<string>\"\n      },\n      \"firstName\": \"<string>\",\n      \"lastName\": \"<string>\",\n      \"phone\": \"<string>\",\n      \"email\": \"<string>\",\n      \"address\": {\n        \"city\": \"<string>\",\n        \"country\": \"<string>\",\n        \"line1\": \"<string>\",\n        \"postalCode\": \"<string>\",\n        \"state\": \"<string>\",\n        \"line2\": \"<string>\"\n      },\n      \"note\": \"<string>\",\n      \"paymentChannel\": \"offline\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"workflowSessionId\": \"<uuid>\",\n      \"fundId\": \"<string>\",\n      \"amount\": \"<number>\",\n      \"userFriendlyId\": \"<string>\",\n      \"createdAt\": \"<dateTime>\",\n      \"updatedAt\": \"<dateTime>\",\n      \"status\": \"Unknown\",\n      \"metadata\": {\n        \"mollit_1b_\": \"<string>\",\n        \"ullamcoc84\": \"<string>\"\n      },\n      \"firstName\": \"<string>\",\n      \"lastName\": \"<string>\",\n      \"phone\": \"<string>\",\n      \"email\": \"<string>\",\n      \"address\": {\n        \"city\": \"<string>\",\n        \"country\": \"<string>\",\n        \"line1\": \"<string>\",\n        \"postalCode\": \"<string>\",\n        \"state\": \"<string>\",\n        \"line2\": \"<string>\"\n      },\n      \"note\": \"<string>\",\n      \"paymentChannel\": \"offline\"\n    }\n  ],\n  \"nextPageToken\": \"<string>\"\n}"
						},
						{
							"id": "ad8e6ec6-ebeb-4b76-b0d9-cdaca91dd162",
							"name": "The request is invalid or contains invalid parameters",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/unintegrated_grants?pageLimit=10&pageToken=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"unintegrated_grants"
									],
									"query": [
										{
											"description": "the number of results to return; defaults to 10, max is 100",
											"key": "pageLimit",
											"value": "10"
										},
										{
											"description": "A token to use to retrieve the next page of results. This is useful for paginating over many pages of results. If set, all other arguments are expected to be kept the same as previous calls and the value of this field should be from the nextPageToken in the previous response.",
											"key": "pageToken",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"disabled": false,
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "X-Request-Id",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n  \"timestamp\": \"<string>\",\n  \"code\": \"<number>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
						},
						{
							"id": "b941e88b-11c6-4c92-845a-bdc0a2751af4",
							"name": "Unauthorized. The request is missing the security (OAuth2 Bearer token) requirements and the server is unable to verify the identify of the caller.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/unintegrated_grants?pageLimit=10&pageToken=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"unintegrated_grants"
									],
									"query": [
										{
											"description": "the number of results to return; defaults to 10, max is 100",
											"key": "pageLimit",
											"value": "10"
										},
										{
											"description": "A token to use to retrieve the next page of results. This is useful for paginating over many pages of results. If set, all other arguments are expected to be kept the same as previous calls and the value of this field should be from the nextPageToken in the previous response.",
											"key": "pageToken",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"disabled": false,
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "X-Request-Id",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n  \"timestamp\": \"<string>\",\n  \"code\": \"<number>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
						},
						{
							"id": "3b00bc83-6561-4a66-8016-8ef86852b903",
							"name": "Access denied",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/unintegrated_grants?pageLimit=10&pageToken=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"unintegrated_grants"
									],
									"query": [
										{
											"description": "the number of results to return; defaults to 10, max is 100",
											"key": "pageLimit",
											"value": "10"
										},
										{
											"description": "A token to use to retrieve the next page of results. This is useful for paginating over many pages of results. If set, all other arguments are expected to be kept the same as previous calls and the value of this field should be from the nextPageToken in the previous response.",
											"key": "pageToken",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"disabled": false,
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "X-Request-Id",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n  \"timestamp\": \"<string>\",\n  \"code\": \"<number>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
						},
						{
							"id": "f97a4498-ffe0-467b-b4bd-4c20a3fc1969",
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/unintegrated_grants?pageLimit=10&pageToken=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"unintegrated_grants"
									],
									"query": [
										{
											"description": "the number of results to return; defaults to 10, max is 100",
											"key": "pageLimit",
											"value": "10"
										},
										{
											"description": "A token to use to retrieve the next page of results. This is useful for paginating over many pages of results. If set, all other arguments are expected to be kept the same as previous calls and the value of this field should be from the nextPageToken in the previous response.",
											"key": "pageToken",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"disabled": false,
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "X-Request-Id",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n  \"timestamp\": \"<string>\",\n  \"code\": \"<number>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Get Unintegrated Grant",
					"id": "f6c39498-b228-49c4-a246-a2303c82e769",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "scope",
									"value": "create:nonprofits read:nonprofits create:connects read:connects create:grants read:grants update:grants read:events create:event_subscriptions read:event_subscriptions update:event_subscriptions",
									"type": "string"
								},
								{
									"key": "accessTokenUrl",
									"value": "https://login.givechariot.com/oauth/token",
									"type": "string"
								},
								{
									"key": "grant_type",
									"value": "client_credentials",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/unintegrated_grants/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"unintegrated_grants",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<uuid>",
									"description": "(Required) the unique id of the unintegrated grant"
								}
							]
						},
						"description": "Get an unintegrated grant object generated by Chariot Connect.\nIf the grant does not exist, returns a 404 status.\nIf the provided ID is not a v4 UUID according to RFC 4122, returns a 400 status."
					},
					"response": [
						{
							"id": "5e3af767-80f6-411a-937b-2ad6babd1794",
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/unintegrated_grants/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"unintegrated_grants",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"disabled": false,
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "X-Request-Id",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<uuid>\",\n  \"workflowSessionId\": \"<uuid>\",\n  \"fundId\": \"<string>\",\n  \"amount\": \"<number>\",\n  \"userFriendlyId\": \"<string>\",\n  \"createdAt\": \"<dateTime>\",\n  \"updatedAt\": \"<dateTime>\",\n  \"status\": \"Unknown\",\n  \"metadata\": {\n    \"nostrud_d\": \"<string>\",\n    \"commodo_10\": \"<string>\",\n    \"do_cc0\": \"<string>\"\n  },\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"phone\": \"<string>\",\n  \"email\": \"<string>\",\n  \"address\": {\n    \"city\": \"<string>\",\n    \"country\": \"<string>\",\n    \"line1\": \"<string>\",\n    \"postalCode\": \"<string>\",\n    \"state\": \"<string>\",\n    \"line2\": \"<string>\"\n  },\n  \"note\": \"<string>\",\n  \"paymentChannel\": \"offline\"\n}"
						},
						{
							"id": "3ba85da2-1bfe-4169-9558-d4bfc34a865e",
							"name": "The request is invalid or contains invalid parameters",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/unintegrated_grants/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"unintegrated_grants",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"disabled": false,
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "X-Request-Id",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n  \"timestamp\": \"<string>\",\n  \"code\": \"<number>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
						},
						{
							"id": "eb230c0b-7d44-4f67-b5ca-83c0ec3991f6",
							"name": "Unauthorized. The request is missing the security (OAuth2 Bearer token) requirements and the server is unable to verify the identify of the caller.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/unintegrated_grants/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"unintegrated_grants",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"disabled": false,
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "X-Request-Id",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n  \"timestamp\": \"<string>\",\n  \"code\": \"<number>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
						},
						{
							"id": "955cf1f1-043f-4f98-bfbf-8fc0a3aaab06",
							"name": "Access denied",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/unintegrated_grants/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"unintegrated_grants",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"disabled": false,
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "X-Request-Id",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n  \"timestamp\": \"<string>\",\n  \"code\": \"<number>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
						},
						{
							"id": "09b4dc7d-b0f9-4594-8105-c28fe9654be4",
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/unintegrated_grants/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"unintegrated_grants",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"disabled": false,
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "X-Request-Id",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n  \"timestamp\": \"<string>\",\n  \"code\": \"<number>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
						},
						{
							"id": "8b75eef8-8658-4789-9435-dcf565e8f666",
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/unintegrated_grants/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"unintegrated_grants",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"disabled": false,
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "X-Request-Id",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n  \"timestamp\": \"<string>\",\n  \"code\": \"<number>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Update Unintegrated Grant",
					"id": "99ffbcf9-b992-4365-b34f-4eaaa5315535",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "scope",
									"value": "create:nonprofits read:nonprofits create:connects read:connects create:grants read:grants update:grants read:events create:event_subscriptions read:event_subscriptions update:event_subscriptions",
									"type": "string"
								},
								{
									"key": "accessTokenUrl",
									"value": "https://login.givechariot.com/oauth/token",
									"type": "string"
								},
								{
									"key": "grant_type",
									"value": "client_credentials",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"status\": \"Completed\",\n  \"acknowledgedAt\": \"<dateTime>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/unintegrated_grants/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"unintegrated_grants",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<uuid>",
									"description": "(Required) the unique id of the unintegrated grant"
								}
							]
						},
						"description": "Update an unintegrated grant object generated by Chariot Connect.\nThis is useful to update the status or acknowledgement of the unintegrated grant.\nIf the unintegrated grant does not exist, returns a 404 status.\nIf the provided ID is not a v4 UUID according to RFC 4122, returns a 400 status."
					},
					"response": [
						{
							"id": "da0f84d2-0a3e-4296-a6ae-95a8620d4ab0",
							"name": "OK",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"status\": \"Completed\",\n  \"acknowledgedAt\": \"<dateTime>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/unintegrated_grants/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"unintegrated_grants",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"disabled": false,
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "X-Request-Id",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<uuid>\",\n  \"workflowSessionId\": \"<uuid>\",\n  \"fundId\": \"<string>\",\n  \"amount\": \"<number>\",\n  \"userFriendlyId\": \"<string>\",\n  \"createdAt\": \"<dateTime>\",\n  \"updatedAt\": \"<dateTime>\",\n  \"status\": \"Unknown\",\n  \"metadata\": {\n    \"nostrud_d\": \"<string>\",\n    \"commodo_10\": \"<string>\",\n    \"do_cc0\": \"<string>\"\n  },\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"phone\": \"<string>\",\n  \"email\": \"<string>\",\n  \"address\": {\n    \"city\": \"<string>\",\n    \"country\": \"<string>\",\n    \"line1\": \"<string>\",\n    \"postalCode\": \"<string>\",\n    \"state\": \"<string>\",\n    \"line2\": \"<string>\"\n  },\n  \"note\": \"<string>\",\n  \"paymentChannel\": \"offline\"\n}"
						},
						{
							"id": "50d4fc19-beff-4319-84c0-48e937e6e105",
							"name": "The request is invalid or contains invalid parameters",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"status\": \"Completed\",\n  \"acknowledgedAt\": \"<dateTime>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/unintegrated_grants/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"unintegrated_grants",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"disabled": false,
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "X-Request-Id",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n  \"timestamp\": \"<string>\",\n  \"code\": \"<number>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
						},
						{
							"id": "e3bfa116-428a-4ef0-8c00-47975d63aaad",
							"name": "Unauthorized. The request is missing the security (OAuth2 Bearer token) requirements and the server is unable to verify the identify of the caller.",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"status\": \"Completed\",\n  \"acknowledgedAt\": \"<dateTime>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/unintegrated_grants/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"unintegrated_grants",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"disabled": false,
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "X-Request-Id",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n  \"timestamp\": \"<string>\",\n  \"code\": \"<number>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
						},
						{
							"id": "d4ec9324-7924-4627-8751-a23404e0345e",
							"name": "Access denied",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"status\": \"Completed\",\n  \"acknowledgedAt\": \"<dateTime>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/unintegrated_grants/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"unintegrated_grants",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"disabled": false,
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "X-Request-Id",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n  \"timestamp\": \"<string>\",\n  \"code\": \"<number>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
						},
						{
							"id": "3a2142fb-c30f-4912-954d-1110ce7fec20",
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"status\": \"Completed\",\n  \"acknowledgedAt\": \"<dateTime>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/unintegrated_grants/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"unintegrated_grants",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"disabled": false,
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "X-Request-Id",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n  \"timestamp\": \"<string>\",\n  \"code\": \"<number>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
						},
						{
							"id": "2d1f4e59-cb0f-4b80-b70c-e76e9c749f35",
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"status\": \"Completed\",\n  \"acknowledgedAt\": \"<dateTime>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/unintegrated_grants/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"unintegrated_grants",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"disabled": false,
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "X-Request-Id",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n  \"timestamp\": \"<string>\",\n  \"code\": \"<number>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
						}
					]
				}
			],
			"id": "b1fc0cae-00f7-414f-b5f0-d459c2507b5f"
		},
		{
			"name": "DAFs",
			"item": [
				{
					"name": "List DAFs",
					"id": "19b92b75-fa3d-4e41-9a16-f18c1af8a504",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/dafs?pageLimit=10&pageToken=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"dafs"
							],
							"query": [
								{
									"description": "the number of results to return; defaults to 10, max is 100",
									"key": "pageLimit",
									"value": "10"
								},
								{
									"description": "A token to use to retrieve the next page of results. This is useful for paginating over many pages of results. If set, all other arguments are expected to be kept the same as previous calls.",
									"key": "pageToken",
									"value": "<string>"
								}
							]
						},
						"description": "List all DAF objects. This API allows for paginating over many results."
					},
					"response": [
						{
							"id": "d8a234be-9f85-44ab-91bd-3b9c5a1b84e9",
							"name": "The response for Dafs.list",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/dafs?pageLimit=10&pageToken=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"dafs"
									],
									"query": [
										{
											"description": "the number of results to return; defaults to 10, max is 100",
											"key": "pageLimit",
											"value": "10"
										},
										{
											"description": "A token to use to retrieve the next page of results. This is useful for paginating over many pages of results. If set, all other arguments are expected to be kept the same as previous calls.",
											"key": "pageToken",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"disabled": false,
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "X-Request-Id",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n  \"results\": [\n    {\n      \"id\": \"<string>\",\n      \"orgName\": \"<string>\",\n      \"address\": \"<string>\",\n      \"address2\": \"<string>\",\n      \"city\": \"<string>\",\n      \"state\": \"<string>\",\n      \"zip\": \"<string>\",\n      \"supported\": \"<boolean>\",\n      \"minimumGrantAmount\": \"<number>\",\n      \"institutionDown\": \"<boolean>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"orgName\": \"<string>\",\n      \"address\": \"<string>\",\n      \"address2\": \"<string>\",\n      \"city\": \"<string>\",\n      \"state\": \"<string>\",\n      \"zip\": \"<string>\",\n      \"supported\": \"<boolean>\",\n      \"minimumGrantAmount\": \"<number>\",\n      \"institutionDown\": \"<boolean>\"\n    }\n  ],\n  \"nextPageToken\": \"<string>\"\n}"
						},
						{
							"id": "2e04385c-b2cc-4f07-940e-24cb34680406",
							"name": "The request is invalid or contains invalid parameters",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/dafs?pageLimit=10&pageToken=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"dafs"
									],
									"query": [
										{
											"description": "the number of results to return; defaults to 10, max is 100",
											"key": "pageLimit",
											"value": "10"
										},
										{
											"description": "A token to use to retrieve the next page of results. This is useful for paginating over many pages of results. If set, all other arguments are expected to be kept the same as previous calls.",
											"key": "pageToken",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"disabled": false,
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "X-Request-Id",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n  \"timestamp\": \"<string>\",\n  \"code\": \"<number>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
						},
						{
							"id": "c33b71fa-a4ff-4742-ba6e-1d3e04925d0a",
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/dafs?pageLimit=10&pageToken=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"dafs"
									],
									"query": [
										{
											"description": "the number of results to return; defaults to 10, max is 100",
											"key": "pageLimit",
											"value": "10"
										},
										{
											"description": "A token to use to retrieve the next page of results. This is useful for paginating over many pages of results. If set, all other arguments are expected to be kept the same as previous calls.",
											"key": "pageToken",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"disabled": false,
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "X-Request-Id",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n  \"timestamp\": \"<string>\",\n  \"code\": \"<number>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Get DAF object",
					"id": "13cc76dc-467d-4d8b-83fa-5b78b2a6fddf",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/dafs/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"dafs",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<uuid>",
									"description": "(Required) the unique id of the DAF"
								}
							]
						},
						"description": "Get a DAF object by id.\nIf the DAF does not exist, returns a 404 status.\nIf the provided ID is not a v4 UUID according to RFC 4122, returns a 400 status."
					},
					"response": [
						{
							"id": "637edfbf-c223-43cc-96f9-28d1b57016e1",
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/dafs/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"dafs",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"disabled": false,
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "X-Request-Id",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<string>\",\n  \"orgName\": \"<string>\",\n  \"address\": \"<string>\",\n  \"address2\": \"<string>\",\n  \"city\": \"<string>\",\n  \"state\": \"<string>\",\n  \"zip\": \"<string>\",\n  \"supported\": \"<boolean>\",\n  \"minimumGrantAmount\": \"<number>\",\n  \"institutionDown\": \"<boolean>\"\n}"
						},
						{
							"id": "74e9107e-0a1b-4e8e-91f3-84a4ccc3e1df",
							"name": "The request is invalid or contains invalid parameters",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/dafs/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"dafs",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"disabled": false,
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "X-Request-Id",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n  \"timestamp\": \"<string>\",\n  \"code\": \"<number>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
						},
						{
							"id": "34ac5149-794e-4943-b187-37c5b4278655",
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/dafs/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"dafs",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"disabled": false,
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "X-Request-Id",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n  \"timestamp\": \"<string>\",\n  \"code\": \"<number>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
						},
						{
							"id": "47df580e-fbad-46ac-9d96-32425e8658ef",
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/dafs/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"dafs",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"disabled": false,
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "X-Request-Id",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n  \"timestamp\": \"<string>\",\n  \"code\": \"<number>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
						}
					]
				}
			],
			"id": "ce659a32-43c5-45a1-9fd7-46bac5423399"
		},
		{
			"name": "Events",
			"item": [
				{
					"name": "List Events",
					"id": "0e37b76d-65db-4a65-a873-ea176d9ca05b",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "scope",
									"value": "create:nonprofits read:nonprofits create:connects read:connects create:grants read:grants update:grants read:events create:event_subscriptions read:event_subscriptions update:event_subscriptions",
									"type": "string"
								},
								{
									"key": "accessTokenUrl",
									"value": "https://login.givechariot.com/oauth/token",
									"type": "string"
								},
								{
									"key": "grant_type",
									"value": "client_credentials",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/events?limit=<integer>&cursor=<string>&category=unintegrated_grant.updated",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"events"
							],
							"query": [
								{
									"description": "Limit the size of the list that is returned. The default (and maximum) is 100 objects.",
									"key": "limit",
									"value": "<integer>"
								},
								{
									"description": "The cursor to use for pagination. If not set, the first page of results will be returned.",
									"key": "cursor",
									"value": "<string>"
								},
								{
									"description": "Filter Events for those with the specified category.\n",
									"key": "category",
									"value": "unintegrated_grant.updated"
								}
							]
						},
						"description": "List all events corresponding to your Chariot account."
					},
					"response": [
						{
							"id": "5e146f8e-d694-45d4-a184-f485b62cfdf2",
							"name": "The response for Events.list",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/events?limit=<integer>&cursor=<string>&category=unintegrated_grant.updated",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"events"
									],
									"query": [
										{
											"description": "Limit the size of the list that is returned. The default (and maximum) is 100 objects.",
											"key": "limit",
											"value": "<integer>"
										},
										{
											"description": "The cursor to use for pagination. If not set, the first page of results will be returned.",
											"key": "cursor",
											"value": "<string>"
										},
										{
											"description": "Filter Events for those with the specified category.\n",
											"key": "category",
											"value": "unintegrated_grant.updated"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"disabled": false,
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "X-Request-Id",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n  \"results\": [\n    {\n      \"id\": \"<string>\",\n      \"category\": \"unintegrated_grant.created\",\n      \"created_at\": \"<dateTime>\",\n      \"associated_object_id\": \"<string>\",\n      \"associated_object_type\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"category\": \"grant.updated\",\n      \"created_at\": \"<dateTime>\",\n      \"associated_object_id\": \"<string>\",\n      \"associated_object_type\": \"<string>\"\n    }\n  ],\n  \"nextPageToken\": \"<string>\"\n}"
						},
						{
							"id": "915e34ee-b690-41aa-894e-9487b87e087d",
							"name": "The request is invalid or contains invalid parameters",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/events?limit=<integer>&cursor=<string>&category=unintegrated_grant.updated",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"events"
									],
									"query": [
										{
											"description": "Limit the size of the list that is returned. The default (and maximum) is 100 objects.",
											"key": "limit",
											"value": "<integer>"
										},
										{
											"description": "The cursor to use for pagination. If not set, the first page of results will be returned.",
											"key": "cursor",
											"value": "<string>"
										},
										{
											"description": "Filter Events for those with the specified category.\n",
											"key": "category",
											"value": "unintegrated_grant.updated"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"disabled": false,
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "X-Request-Id",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n  \"timestamp\": \"<string>\",\n  \"code\": \"<number>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
						},
						{
							"id": "aecc8d3a-6e75-4232-a32f-9b45af38f179",
							"name": "Unauthorized. The request is missing the security (OAuth2 Bearer token) requirements and the server is unable to verify the identify of the caller.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/events?limit=<integer>&cursor=<string>&category=unintegrated_grant.updated",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"events"
									],
									"query": [
										{
											"description": "Limit the size of the list that is returned. The default (and maximum) is 100 objects.",
											"key": "limit",
											"value": "<integer>"
										},
										{
											"description": "The cursor to use for pagination. If not set, the first page of results will be returned.",
											"key": "cursor",
											"value": "<string>"
										},
										{
											"description": "Filter Events for those with the specified category.\n",
											"key": "category",
											"value": "unintegrated_grant.updated"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"disabled": false,
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "X-Request-Id",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n  \"timestamp\": \"<string>\",\n  \"code\": \"<number>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
						},
						{
							"id": "c7fa66db-e7c2-4144-9a88-3833589c2a08",
							"name": "Access denied",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/events?limit=<integer>&cursor=<string>&category=unintegrated_grant.updated",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"events"
									],
									"query": [
										{
											"description": "Limit the size of the list that is returned. The default (and maximum) is 100 objects.",
											"key": "limit",
											"value": "<integer>"
										},
										{
											"description": "The cursor to use for pagination. If not set, the first page of results will be returned.",
											"key": "cursor",
											"value": "<string>"
										},
										{
											"description": "Filter Events for those with the specified category.\n",
											"key": "category",
											"value": "unintegrated_grant.updated"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"disabled": false,
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "X-Request-Id",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n  \"timestamp\": \"<string>\",\n  \"code\": \"<number>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
						},
						{
							"id": "5af58fb0-b3aa-44d6-a150-cb6403cec680",
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/events?limit=<integer>&cursor=<string>&category=unintegrated_grant.updated",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"events"
									],
									"query": [
										{
											"description": "Limit the size of the list that is returned. The default (and maximum) is 100 objects.",
											"key": "limit",
											"value": "<integer>"
										},
										{
											"description": "The cursor to use for pagination. If not set, the first page of results will be returned.",
											"key": "cursor",
											"value": "<string>"
										},
										{
											"description": "Filter Events for those with the specified category.\n",
											"key": "category",
											"value": "unintegrated_grant.updated"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"disabled": false,
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "X-Request-Id",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n  \"timestamp\": \"<string>\",\n  \"code\": \"<number>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Retrieve an Event",
					"id": "a1bb49c9-e00b-438f-b7e5-5414d4db0ccf",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "scope",
									"value": "create:nonprofits read:nonprofits create:connects read:connects create:grants read:grants update:grants read:events create:event_subscriptions read:event_subscriptions update:event_subscriptions",
									"type": "string"
								},
								{
									"key": "accessTokenUrl",
									"value": "https://login.givechariot.com/oauth/token",
									"type": "string"
								},
								{
									"key": "grant_type",
									"value": "client_credentials",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/events/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"events",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<string>",
									"description": "(Required) The unique identifier for the event"
								}
							]
						},
						"description": "Retrieve an event corresponding to your Chariot account."
					},
					"response": [
						{
							"id": "af441704-a1e9-42c3-a2c7-ad462c8a0138",
							"name": "The event was retrieved",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/events/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"events",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<string>\",\n  \"category\": \"grant.created\",\n  \"created_at\": \"<dateTime>\",\n  \"associated_object_id\": \"<string>\",\n  \"associated_object_type\": \"<string>\"\n}"
						},
						{
							"id": "ed85dc8f-4971-41af-80df-fe64b28a3f6f",
							"name": "The request is invalid or contains invalid parameters",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/events/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"events",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"disabled": false,
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "X-Request-Id",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n  \"timestamp\": \"<string>\",\n  \"code\": \"<number>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
						},
						{
							"id": "9bcabbc7-048b-42cc-ab2d-acf70c187552",
							"name": "Unauthorized. The request is missing the security (OAuth2 Bearer token) requirements and the server is unable to verify the identify of the caller.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/events/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"events",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"disabled": false,
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "X-Request-Id",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n  \"timestamp\": \"<string>\",\n  \"code\": \"<number>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
						},
						{
							"id": "89d0f1e7-1d3a-491c-a8e1-77986220aef6",
							"name": "Access denied",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/events/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"events",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"disabled": false,
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "X-Request-Id",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n  \"timestamp\": \"<string>\",\n  \"code\": \"<number>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
						},
						{
							"id": "c8a5c11d-d10d-4f46-9b1e-af897deed1cf",
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/events/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"events",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"disabled": false,
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "X-Request-Id",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n  \"timestamp\": \"<string>\",\n  \"code\": \"<number>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
						},
						{
							"id": "e921713d-b953-4843-99c2-5375daab5900",
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/events/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"events",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"disabled": false,
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "X-Request-Id",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n  \"timestamp\": \"<string>\",\n  \"code\": \"<number>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
						}
					]
				}
			],
			"id": "241f0fc4-29da-4587-b5b4-b0caf191362f"
		},
		{
			"name": "Event Subscriptions",
			"item": [
				{
					"name": "Create an Event Subscription",
					"id": "f80dd799-9888-4195-88c7-9ce3197ff1e0",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "scope",
									"value": "create:nonprofits read:nonprofits create:connects read:connects create:grants read:grants update:grants read:events create:event_subscriptions read:event_subscriptions update:event_subscriptions",
									"type": "string"
								},
								{
									"key": "accessTokenUrl",
									"value": "https://login.givechariot.com/oauth/token",
									"type": "string"
								},
								{
									"key": "grant_type",
									"value": "client_credentials",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"url\": \"<string>\",\n  \"category\": \"unintegrated_grant.created\",\n  \"signingSecret\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/event_subscriptions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"event_subscriptions"
							]
						},
						"description": "Create an event subscription corresponding to your Chariot account."
					},
					"response": [
						{
							"id": "02ef6cec-6109-48cd-97ea-6763c295a5c4",
							"name": "The event subscription was created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"url\": \"<string>\",\n  \"category\": \"unintegrated_grant.created\",\n  \"signingSecret\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/event_subscriptions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"event_subscriptions"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"disabled": false,
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "Location",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n  \"url\": \"<string>\",\n  \"id\": \"<string>\",\n  \"created_at\": \"<dateTime>\",\n  \"status\": \"deleted\",\n  \"category\": \"unintegrated_grant.updated\"\n}"
						},
						{
							"id": "4380b357-78b2-4dd6-a833-a815b1ffffa7",
							"name": "The request is invalid or contains invalid parameters",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"url\": \"<string>\",\n  \"category\": \"unintegrated_grant.created\",\n  \"signingSecret\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/event_subscriptions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"event_subscriptions"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"disabled": false,
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "X-Request-Id",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n  \"timestamp\": \"<string>\",\n  \"code\": \"<number>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
						},
						{
							"id": "a3d4ef04-43f5-4996-ba1d-0e9dcdd49fca",
							"name": "Unauthorized. The request is missing the security (OAuth2 Bearer token) requirements and the server is unable to verify the identify of the caller.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"url\": \"<string>\",\n  \"category\": \"unintegrated_grant.created\",\n  \"signingSecret\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/event_subscriptions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"event_subscriptions"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"disabled": false,
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "X-Request-Id",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n  \"timestamp\": \"<string>\",\n  \"code\": \"<number>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
						},
						{
							"id": "9f8677da-472f-4cc3-92de-cb0e7e14b80b",
							"name": "Access denied",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"url\": \"<string>\",\n  \"category\": \"unintegrated_grant.created\",\n  \"signingSecret\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/event_subscriptions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"event_subscriptions"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"disabled": false,
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "X-Request-Id",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n  \"timestamp\": \"<string>\",\n  \"code\": \"<number>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
						},
						{
							"id": "6a5a1e81-b6b6-45f4-b527-216a388e2c22",
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"url\": \"<string>\",\n  \"category\": \"unintegrated_grant.created\",\n  \"signingSecret\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/event_subscriptions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"event_subscriptions"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"disabled": false,
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "X-Request-Id",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n  \"timestamp\": \"<string>\",\n  \"code\": \"<number>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
						},
						{
							"id": "fa11afb3-74f3-4f85-be8a-9caa21b3fba8",
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"url\": \"<string>\",\n  \"category\": \"unintegrated_grant.created\",\n  \"signingSecret\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/event_subscriptions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"event_subscriptions"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"disabled": false,
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "X-Request-Id",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n  \"timestamp\": \"<string>\",\n  \"code\": \"<number>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "List Event Subscriptions",
					"id": "919f990a-732a-49ce-9738-59cbffd8a1a6",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "scope",
									"value": "create:nonprofits read:nonprofits create:connects read:connects create:grants read:grants update:grants read:events create:event_subscriptions read:event_subscriptions update:event_subscriptions",
									"type": "string"
								},
								{
									"key": "accessTokenUrl",
									"value": "https://login.givechariot.com/oauth/token",
									"type": "string"
								},
								{
									"key": "grant_type",
									"value": "client_credentials",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/event_subscriptions?limit=<integer>&cursor=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"event_subscriptions"
							],
							"query": [
								{
									"description": "Limit the size of the list that is returned. The default (and maximum) is 100 objects.",
									"key": "limit",
									"value": "<integer>"
								},
								{
									"description": "The cursor to use for pagination. If not set, the first page of results will be returned.",
									"key": "cursor",
									"value": "<string>"
								}
							]
						},
						"description": "List all event subscriptions corresponding to your Chariot account."
					},
					"response": [
						{
							"id": "33a918db-c027-4522-a1c6-d549280ce8d4",
							"name": "The response for Events.list",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/event_subscriptions?limit=<integer>&cursor=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"event_subscriptions"
									],
									"query": [
										{
											"description": "Limit the size of the list that is returned. The default (and maximum) is 100 objects.",
											"key": "limit",
											"value": "<integer>"
										},
										{
											"description": "The cursor to use for pagination. If not set, the first page of results will be returned.",
											"key": "cursor",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"disabled": false,
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "X-Request-Id",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n  \"results\": [\n    {\n      \"url\": \"<string>\",\n      \"id\": \"<string>\",\n      \"created_at\": \"<dateTime>\",\n      \"status\": \"requires_attention\",\n      \"category\": \"grant.updated\"\n    },\n    {\n      \"url\": \"<string>\",\n      \"id\": \"<string>\",\n      \"created_at\": \"<dateTime>\",\n      \"status\": \"requires_attention\",\n      \"category\": \"unintegrated_grant.updated\"\n    }\n  ],\n  \"nextPageToken\": \"<string>\"\n}"
						},
						{
							"id": "fff1114c-9e58-4db0-a06c-24948ab56a09",
							"name": "The request is invalid or contains invalid parameters",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/event_subscriptions?limit=<integer>&cursor=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"event_subscriptions"
									],
									"query": [
										{
											"description": "Limit the size of the list that is returned. The default (and maximum) is 100 objects.",
											"key": "limit",
											"value": "<integer>"
										},
										{
											"description": "The cursor to use for pagination. If not set, the first page of results will be returned.",
											"key": "cursor",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"disabled": false,
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "X-Request-Id",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n  \"timestamp\": \"<string>\",\n  \"code\": \"<number>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
						},
						{
							"id": "25b8e0ef-4c24-4833-a8d0-02d200bb72d8",
							"name": "Unauthorized. The request is missing the security (OAuth2 Bearer token) requirements and the server is unable to verify the identify of the caller.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/event_subscriptions?limit=<integer>&cursor=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"event_subscriptions"
									],
									"query": [
										{
											"description": "Limit the size of the list that is returned. The default (and maximum) is 100 objects.",
											"key": "limit",
											"value": "<integer>"
										},
										{
											"description": "The cursor to use for pagination. If not set, the first page of results will be returned.",
											"key": "cursor",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"disabled": false,
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "X-Request-Id",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n  \"timestamp\": \"<string>\",\n  \"code\": \"<number>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
						},
						{
							"id": "1b88b02e-2d11-4da3-ba6c-2278e01b5045",
							"name": "Access denied",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/event_subscriptions?limit=<integer>&cursor=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"event_subscriptions"
									],
									"query": [
										{
											"description": "Limit the size of the list that is returned. The default (and maximum) is 100 objects.",
											"key": "limit",
											"value": "<integer>"
										},
										{
											"description": "The cursor to use for pagination. If not set, the first page of results will be returned.",
											"key": "cursor",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"disabled": false,
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "X-Request-Id",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n  \"timestamp\": \"<string>\",\n  \"code\": \"<number>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
						},
						{
							"id": "50ec0dbd-0a68-43c9-8be8-3b5ec3066c9c",
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/event_subscriptions?limit=<integer>&cursor=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"event_subscriptions"
									],
									"query": [
										{
											"description": "Limit the size of the list that is returned. The default (and maximum) is 100 objects.",
											"key": "limit",
											"value": "<integer>"
										},
										{
											"description": "The cursor to use for pagination. If not set, the first page of results will be returned.",
											"key": "cursor",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"disabled": false,
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "X-Request-Id",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n  \"timestamp\": \"<string>\",\n  \"code\": \"<number>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Retrieve an Event Subscription",
					"id": "01bb5b22-c605-4ec0-b457-38cb4bc8e135",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "scope",
									"value": "create:nonprofits read:nonprofits create:connects read:connects create:grants read:grants update:grants read:events create:event_subscriptions read:event_subscriptions update:event_subscriptions",
									"type": "string"
								},
								{
									"key": "accessTokenUrl",
									"value": "https://login.givechariot.com/oauth/token",
									"type": "string"
								},
								{
									"key": "grant_type",
									"value": "client_credentials",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/event_subscriptions/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"event_subscriptions",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<string>",
									"description": "(Required) The unique identifier for the event subscription"
								}
							]
						},
						"description": "Retrieve an event subscription corresponding to your Chariot account."
					},
					"response": [
						{
							"id": "07b9bb4f-7668-4eaa-8b96-7332cb3a4f39",
							"name": "The event subscription was received",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/event_subscriptions/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"event_subscriptions",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"url\": \"<string>\",\n  \"id\": \"<string>\",\n  \"created_at\": \"<dateTime>\",\n  \"status\": \"deleted\",\n  \"category\": \"unintegrated_grant.updated\"\n}"
						},
						{
							"id": "4e3f7793-d41d-4bfd-8372-188043d14302",
							"name": "The request is invalid or contains invalid parameters",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/event_subscriptions/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"event_subscriptions",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"disabled": false,
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "X-Request-Id",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n  \"timestamp\": \"<string>\",\n  \"code\": \"<number>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
						},
						{
							"id": "d4137f17-8e51-4514-a7ab-cc5de88daf41",
							"name": "Unauthorized. The request is missing the security (OAuth2 Bearer token) requirements and the server is unable to verify the identify of the caller.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/event_subscriptions/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"event_subscriptions",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"disabled": false,
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "X-Request-Id",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n  \"timestamp\": \"<string>\",\n  \"code\": \"<number>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
						},
						{
							"id": "ffb48103-fd0d-4fb2-98a4-d15d5f6d99b6",
							"name": "Access denied",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/event_subscriptions/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"event_subscriptions",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"disabled": false,
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "X-Request-Id",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n  \"timestamp\": \"<string>\",\n  \"code\": \"<number>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
						},
						{
							"id": "4994c3f4-536c-409c-9dcc-491d858f7063",
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/event_subscriptions/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"event_subscriptions",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"disabled": false,
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "X-Request-Id",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n  \"timestamp\": \"<string>\",\n  \"code\": \"<number>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
						},
						{
							"id": "0d57ef9f-014c-4105-89ab-dba42deba45d",
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/event_subscriptions/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"event_subscriptions",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"disabled": false,
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "X-Request-Id",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n  \"timestamp\": \"<string>\",\n  \"code\": \"<number>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Update an Event Subscription",
					"id": "bd4b7384-f60d-4b8d-b8b5-72fddd5c7d9e",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "scope",
									"value": "create:nonprofits read:nonprofits create:connects read:connects create:grants read:grants update:grants read:events create:event_subscriptions read:event_subscriptions update:event_subscriptions",
									"type": "string"
								},
								{
									"key": "accessTokenUrl",
									"value": "https://login.givechariot.com/oauth/token",
									"type": "string"
								},
								{
									"key": "grant_type",
									"value": "client_credentials",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"status\": \"deleted\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/event_subscriptions/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"event_subscriptions",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<string>",
									"description": "(Required) The unique identifier for the event subscription"
								}
							]
						},
						"description": "Update an event subscription corresponding to your Chariot account."
					},
					"response": [
						{
							"id": "0fc6883c-ac37-43c2-a5c1-4cbdd4299223",
							"name": "The event subscription was updated",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"status\": \"deleted\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/event_subscriptions/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"event_subscriptions",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"url\": \"<string>\",\n  \"id\": \"<string>\",\n  \"created_at\": \"<dateTime>\",\n  \"status\": \"deleted\",\n  \"category\": \"unintegrated_grant.updated\"\n}"
						},
						{
							"id": "50179063-05be-435a-bdab-bb8db515feee",
							"name": "The request is invalid or contains invalid parameters",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"status\": \"deleted\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/event_subscriptions/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"event_subscriptions",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"disabled": false,
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "X-Request-Id",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n  \"timestamp\": \"<string>\",\n  \"code\": \"<number>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
						},
						{
							"id": "9dc7e231-0202-4a9d-bd9e-f21ab6e0baa3",
							"name": "Unauthorized. The request is missing the security (OAuth2 Bearer token) requirements and the server is unable to verify the identify of the caller.",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"status\": \"deleted\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/event_subscriptions/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"event_subscriptions",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"disabled": false,
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "X-Request-Id",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n  \"timestamp\": \"<string>\",\n  \"code\": \"<number>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
						},
						{
							"id": "854e6ba8-0487-426a-8085-a663e9327a43",
							"name": "Access denied",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"status\": \"deleted\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/event_subscriptions/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"event_subscriptions",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"disabled": false,
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "X-Request-Id",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n  \"timestamp\": \"<string>\",\n  \"code\": \"<number>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
						},
						{
							"id": "dded8d72-4cfc-490f-8524-aa9530dbd7be",
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"status\": \"deleted\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/event_subscriptions/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"event_subscriptions",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"disabled": false,
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "X-Request-Id",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n  \"timestamp\": \"<string>\",\n  \"code\": \"<number>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
						},
						{
							"id": "4bf4e837-ce66-4f90-8118-a7e60774889a",
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"status\": \"deleted\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/event_subscriptions/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"event_subscriptions",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"disabled": false,
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "X-Request-Id",
									"value": ""
								}
							],
							"cookie": [],
							"body": "{\n  \"timestamp\": \"<string>\",\n  \"code\": \"<number>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
						}
					]
				}
			],
			"id": "f758767f-b668-4429-822b-55b25c4dd452"
		}
	],
	"variable": [
		{
			"id": "3f1cb4c5-d3b6-4ea0-a843-7521ef423d6b",
			"key": "baseUrl",
			"value": "https://sandboxapi.givechariot.com"
		}
	]
}