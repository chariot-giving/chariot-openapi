{
	"info": {
		"_postman_id": "1e5dfa61-1c5c-4be9-9c61-8aff5dd160f2",
		"name": "Chariot API",
		"description": "The Chariot REST API. Please see https://givechariot.readme.io/reference/overview for more details.\n\nContact Support:\n Name: Chariot Development Team",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_uid": "23306205-1e5dfa61-1c5c-4be9-9c61-8aff5dd160f2"
	},
	"item": [
		{
			"name": "v1",
			"item": [
				{
					"name": "connects",
					"item": [
						{
							"name": "Create Connect",
							"id": "133b60ac-00e9-4dac-8ba0-a111c468bb6d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "create:nonprofits read:nonprofits create:connects read:connects create:grants read:grants",
											"type": "string"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://dev-w2rfcsc8.us.auth0.com/oauth/token",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "client_credentials",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"in\",\n  \"metadata\": {\n    \"occaecat24\": \"officia\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/connects?nonprofit=urn:uuid:1b448909-3236-35df-5eed-868c3bc5ce11",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"connects"
									],
									"query": [
										{
											"key": "nonprofit",
											"value": "urn:uuid:1b448909-3236-35df-5eed-868c3bc5ce11",
											"description": "(Required) The unique identifier (ID) for the nonprofit.\nThe format should be a v4 UUID according to RFC 4122.\nThis can be found by calling the /v1/nonprofit/{ein} API endpoint."
										}
									]
								},
								"description": "Get or create a Connect object. Only one Connect object can be created per Nonprofit-Subscription pair. If one already exists, this will return a 200 status with the existing object. The returned Connect can be used to integrate the client-side Chariot Connect component using the id property (CID) and also query for data generated from the Chariot Connect instance from the Chariot API using the apiKey property."
							},
							"response": [
								{
									"id": "333f021c-78d8-4fef-8c45-eafdd2fd8a22",
									"name": "the existing Connect object",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/connects?nonprofit=<uuid>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"connects"
											],
											"query": [
												{
													"key": "nonprofit",
													"value": "<uuid>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"disabled": false,
											"description": "The unique identifier for the request",
											"key": "X-Request-Id",
											"value": "<string>"
										},
										{
											"disabled": false,
											"description": "The URI reference of the existing connect object.",
											"key": "Location",
											"value": "<uri>"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"apiKey\": \"<string>\",\n  \"subscriptionId\": \"<string>\",\n  \"active\": \"<boolean>\",\n  \"createdAt\": \"<dateTime>\",\n  \"updatedAt\": \"<dateTime>\",\n  \"createdBy\": \"<string>\",\n  \"archived\": \"<boolean>\",\n  \"metadata\": {\n    \"anim_9e\": \"<string>\",\n    \"mollita9a\": \"<string>\",\n    \"dolore_905\": \"<string>\"\n  }\n}"
								},
								{
									"id": "e9b26c5b-670a-4e3e-8bd1-141a39e4c4b0",
									"name": "the created connect object",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/connects?nonprofit=<uuid>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"connects"
											],
											"query": [
												{
													"key": "nonprofit",
													"value": "<uuid>"
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"disabled": false,
											"description": "The unique identifier for the request",
											"key": "X-Request-Id",
											"value": "<string>"
										},
										{
											"disabled": false,
											"description": "The URI reference of the created connect object.",
											"key": "Location",
											"value": "<uri>"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"apiKey\": \"<string>\",\n  \"subscriptionId\": \"<string>\",\n  \"active\": \"<boolean>\",\n  \"createdAt\": \"<dateTime>\",\n  \"updatedAt\": \"<dateTime>\",\n  \"createdBy\": \"<string>\",\n  \"archived\": \"<boolean>\",\n  \"metadata\": {\n    \"anim_9e\": \"<string>\",\n    \"mollita9a\": \"<string>\",\n    \"dolore_905\": \"<string>\"\n  }\n}"
								},
								{
									"id": "3685759d-a19c-44f3-8b3c-894b420691ef",
									"name": "The request is invalid or contains invalid parameters",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/connects?nonprofit=<uuid>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"connects"
											],
											"query": [
												{
													"key": "nonprofit",
													"value": "<uuid>"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"disabled": false,
											"description": "The unique identifier for the request",
											"key": "X-Request-Id",
											"value": "<string>"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"timestamp\": \"<string>\",\n  \"code\": \"<number>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"id": "e014ec5e-df99-4482-9d58-86faef75be51",
									"name": "Access denied",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/connects?nonprofit=<uuid>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"connects"
											],
											"query": [
												{
													"key": "nonprofit",
													"value": "<uuid>"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"disabled": false,
											"description": "The unique identifier for the request",
											"key": "X-Request-Id",
											"value": "<string>"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"timestamp\": \"<string>\",\n  \"code\": \"<number>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"id": "5eca0006-2747-4b33-af16-3897e8047121",
									"name": "Resource Not Found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/connects?nonprofit=<uuid>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"connects"
											],
											"query": [
												{
													"key": "nonprofit",
													"value": "<uuid>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"disabled": false,
											"description": "The unique identifier for the request",
											"key": "X-Request-Id",
											"value": "<string>"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"timestamp\": \"<string>\",\n  \"code\": \"<number>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"id": "42347eea-33ed-4b17-804c-292b3f2d4ac0",
									"name": "Internal Server Error",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/connects?nonprofit=<uuid>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"connects"
											],
											"query": [
												{
													"key": "nonprofit",
													"value": "<uuid>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"disabled": false,
											"description": "The unique identifier for the request",
											"key": "X-Request-Id",
											"value": "<string>"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"timestamp\": \"<string>\",\n  \"code\": \"<number>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Get Connect",
							"id": "0e4dac12-360a-438a-972f-f3f559ee4ae1",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "create:nonprofits read:nonprofits create:connects read:connects create:grants read:grants",
											"type": "string"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://dev-w2rfcsc8.us.auth0.com/oauth/token",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "client_credentials",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/connects/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"connects",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "commodo sit",
											"description": "(Required) the unique id of the connect"
										}
									]
								},
								"description": "Get a Connect object with the unique identifier (CID)"
							},
							"response": [
								{
									"id": "52708289-99c3-4b43-8589-8b4f6150bb46",
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/connects/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"connects",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "commodo sit",
													"description": "(Required) the unique id of the connect"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"disabled": false,
											"description": "The unique identifier for the request",
											"key": "X-Request-Id",
											"value": "<string>"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"apiKey\": \"<string>\",\n  \"subscriptionId\": \"<string>\",\n  \"active\": \"<boolean>\",\n  \"createdAt\": \"<dateTime>\",\n  \"updatedAt\": \"<dateTime>\",\n  \"createdBy\": \"<string>\",\n  \"archived\": \"<boolean>\",\n  \"metadata\": {\n    \"anim_9e\": \"<string>\",\n    \"mollita9a\": \"<string>\",\n    \"dolore_905\": \"<string>\"\n  }\n}"
								},
								{
									"id": "7b0cc82f-b9bb-4d01-90ff-6497eb7c5bd7",
									"name": "The request is invalid or contains invalid parameters",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/connects/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"connects",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "commodo sit",
													"description": "(Required) the unique id of the connect"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"disabled": false,
											"description": "The unique identifier for the request",
											"key": "X-Request-Id",
											"value": "<string>"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"timestamp\": \"<string>\",\n  \"code\": \"<number>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"id": "8e3d853b-3bd7-410b-ad64-1c0ff9befba2",
									"name": "Access denied",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/connects/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"connects",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "commodo sit",
													"description": "(Required) the unique id of the connect"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"disabled": false,
											"description": "The unique identifier for the request",
											"key": "X-Request-Id",
											"value": "<string>"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"timestamp\": \"<string>\",\n  \"code\": \"<number>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"id": "570336ce-b7bf-410d-a1cd-7a2bc3c9e9ad",
									"name": "Resource Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/connects/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"connects",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "commodo sit",
													"description": "(Required) the unique id of the connect"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"disabled": false,
											"description": "The unique identifier for the request",
											"key": "X-Request-Id",
											"value": "<string>"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"timestamp\": \"<string>\",\n  \"code\": \"<number>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"id": "33026584-d103-4ec7-a405-5113dc700141",
									"name": "Internal Server Error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/connects/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"connects",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "commodo sit",
													"description": "(Required) the unique id of the connect"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"disabled": false,
											"description": "The unique identifier for the request",
											"key": "X-Request-Id",
											"value": "<string>"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"timestamp\": \"<string>\",\n  \"code\": \"<number>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
								}
							]
						}
					],
					"id": "10d7cccc-c850-4a2d-ab28-4bff0d856234"
				},
				{
					"name": "grants",
					"item": [
						{
							"name": "List Grants",
							"id": "57a813fa-8312-4d53-90d6-c01563ac7992",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "create:nonprofits read:nonprofits create:connects read:connects create:grants read:grants",
											"type": "string"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://dev-w2rfcsc8.us.auth0.com/oauth/token",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "client_credentials",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/grants?pageLimit=10&pageToken=commodo sit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"grants"
									],
									"query": [
										{
											"key": "pageLimit",
											"value": "10",
											"description": "the number of results to return; defaults to 10, max is 100"
										},
										{
											"key": "pageToken",
											"value": "commodo sit",
											"description": "A token to use to retrieve the next page of results. This is useful for paginating over many pages of results. If set, all other arguments are expected to be kept the same as previous calls and the value of this field should be from the nextPageToken in the previous response."
										}
									]
								},
								"description": "List all grants for the provided API Key. This API allows for paginating over many results."
							},
							"response": [
								{
									"id": "25c73a2c-4c14-406c-a5b8-11c297692753",
									"name": "The response for Grants.list",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/grants?pageLimit=10&pageToken=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"grants"
											],
											"query": [
												{
													"key": "pageLimit",
													"value": "10"
												},
												{
													"key": "pageToken",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"disabled": false,
											"description": "The unique identifier for the request",
											"key": "X-Request-Id",
											"value": "<string>"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"results\": [\n    {\n      \"id\": \"<uuid>\",\n      \"userFriendlyId\": \"<string>\",\n      \"fundId\": \"<string>\",\n      \"amount\": \"<double>\",\n      \"workflowSessionId\": \"<uuid>\",\n      \"externalGrantId\": \"<string>\",\n      \"createdAt\": \"<dateTime>\",\n      \"updatedAt\": \"<dateTime>\",\n      \"status\": \"<string>\",\n      \"coveredFees\": \"<boolean>\",\n      \"feeAmount\": \"<integer>\",\n      \"metadata\": {\n        \"anim5\": \"<string>\"\n      },\n      \"firstName\": \"<string>\",\n      \"lastName\": \"<string>\",\n      \"phone\": \"<string>\",\n      \"email\": \"<string>\",\n      \"note\": \"<string>\",\n      \"statuses\": [\n        {\n          \"id\": \"<uuid>\",\n          \"createdAt\": \"<dateTime>\",\n          \"status\": \"<string>\",\n          \"comment\": \"<string>\"\n        },\n        {\n          \"id\": \"<uuid>\",\n          \"createdAt\": \"<dateTime>\",\n          \"status\": \"<string>\",\n          \"comment\": \"<string>\"\n        }\n      ]\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"userFriendlyId\": \"<string>\",\n      \"fundId\": \"<string>\",\n      \"amount\": \"<double>\",\n      \"workflowSessionId\": \"<uuid>\",\n      \"externalGrantId\": \"<string>\",\n      \"createdAt\": \"<dateTime>\",\n      \"updatedAt\": \"<dateTime>\",\n      \"status\": \"<string>\",\n      \"coveredFees\": \"<boolean>\",\n      \"feeAmount\": \"<integer>\",\n      \"metadata\": {\n        \"velit_b\": \"<string>\"\n      },\n      \"firstName\": \"<string>\",\n      \"lastName\": \"<string>\",\n      \"phone\": \"<string>\",\n      \"email\": \"<string>\",\n      \"note\": \"<string>\",\n      \"statuses\": [\n        {\n          \"id\": \"<uuid>\",\n          \"createdAt\": \"<dateTime>\",\n          \"status\": \"<string>\",\n          \"comment\": \"<string>\"\n        },\n        {\n          \"id\": \"<uuid>\",\n          \"createdAt\": \"<dateTime>\",\n          \"status\": \"<string>\",\n          \"comment\": \"<string>\"\n        }\n      ]\n    }\n  ],\n  \"nextPageToken\": \"<string>\"\n}"
								},
								{
									"id": "719744aa-6356-4209-965b-f54f46736dfc",
									"name": "The request is invalid or contains invalid parameters",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/grants?pageLimit=10&pageToken=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"grants"
											],
											"query": [
												{
													"key": "pageLimit",
													"value": "10"
												},
												{
													"key": "pageToken",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"disabled": false,
											"description": "The unique identifier for the request",
											"key": "X-Request-Id",
											"value": "<string>"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"timestamp\": \"<string>\",\n  \"code\": \"<number>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"id": "cd03f062-ed3a-4d28-b521-72426dabdce5",
									"name": "Access denied",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/grants?pageLimit=10&pageToken=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"grants"
											],
											"query": [
												{
													"key": "pageLimit",
													"value": "10"
												},
												{
													"key": "pageToken",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"disabled": false,
											"description": "The unique identifier for the request",
											"key": "X-Request-Id",
											"value": "<string>"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"timestamp\": \"<string>\",\n  \"code\": \"<number>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"id": "9bc7023b-7bb0-4870-8bef-b21655bd4caa",
									"name": "Internal Server Error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/grants?pageLimit=10&pageToken=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"grants"
											],
											"query": [
												{
													"key": "pageLimit",
													"value": "10"
												},
												{
													"key": "pageToken",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"disabled": false,
											"description": "The unique identifier for the request",
											"key": "X-Request-Id",
											"value": "<string>"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"timestamp\": \"<string>\",\n  \"code\": \"<number>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Create Grant",
							"id": "b97d6fc9-efef-4246-80eb-bf4ab860d0bc",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "create:nonprofits read:nonprofits create:connects read:connects create:grants read:grants",
											"type": "string"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://dev-w2rfcsc8.us.auth0.com/oauth/token",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "client_credentials",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"workflowSessionId\": \"esse cillum fugiat voluptate\",\n  \"amount\": -77410343.67052162,\n  \"coverFees\": false,\n  \"donor\": {\n    \"firstName\": \"esse ad\",\n    \"lastName\": \"dolore consectetur\",\n    \"email\": \"officia sit adipisicing ea\",\n    \"phone\": \"pariatur in\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/grants",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"grants"
									]
								},
								"description": "Create a grant from a workflow session. This is useful to capture a grant intent from an authorized connect workflow session and submit the grant request.\nThe grant must be captured within 5 minutes of authorization otherwise the request will return status 410 Gone.\nA grant can only be captured once from any given workflow session so any duplicate requests will return status 409 Conflict."
							},
							"response": [
								{
									"id": "7dc3b910-f378-4248-a61b-b9d09fe35303",
									"name": "Created grant",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/grants",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"grants"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"disabled": false,
											"description": "The unique identifier for the request",
											"key": "X-Request-Id",
											"value": "<string>"
										},
										{
											"disabled": false,
											"description": "The URI reference of the created grant object.",
											"key": "Location",
											"value": "<uri>"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<uuid>\",\n  \"userFriendlyId\": \"<string>\",\n  \"fundId\": \"<string>\",\n  \"amount\": \"<double>\",\n  \"workflowSessionId\": \"<uuid>\",\n  \"externalGrantId\": \"<string>\",\n  \"createdAt\": \"<dateTime>\",\n  \"updatedAt\": \"<dateTime>\",\n  \"status\": \"<string>\",\n  \"coveredFees\": \"<boolean>\",\n  \"feeAmount\": \"<integer>\",\n  \"metadata\": {\n    \"deserunt4\": \"<string>\",\n    \"ex82\": \"<string>\"\n  },\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"phone\": \"<string>\",\n  \"email\": \"<string>\",\n  \"note\": \"<string>\",\n  \"statuses\": [\n    {\n      \"id\": \"<uuid>\",\n      \"createdAt\": \"<dateTime>\",\n      \"status\": \"<string>\",\n      \"comment\": \"<string>\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"createdAt\": \"<dateTime>\",\n      \"status\": \"<string>\",\n      \"comment\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"id": "a7996c55-ec99-4c5b-9ea0-7ac3cfaf4046",
									"name": "The request is invalid or contains invalid parameters",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/grants",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"grants"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"disabled": false,
											"description": "The unique identifier for the request",
											"key": "X-Request-Id",
											"value": "<string>"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"timestamp\": \"<string>\",\n  \"code\": \"<number>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"id": "8eaa252e-d97f-44ae-b536-c282349a2811",
									"name": "Access denied",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/grants",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"grants"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"disabled": false,
											"description": "The unique identifier for the request",
											"key": "X-Request-Id",
											"value": "<string>"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"timestamp\": \"<string>\",\n  \"code\": \"<number>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"id": "eb79ac1d-c892-4473-8c6d-817bbd604199",
									"name": "Resource Not Found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/grants",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"grants"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"disabled": false,
											"description": "The unique identifier for the request",
											"key": "X-Request-Id",
											"value": "<string>"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"timestamp\": \"<string>\",\n  \"code\": \"<number>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"id": "dba48c5a-293f-42a0-95dc-42c5f844cd13",
									"name": "Resource Conflicts",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/grants",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"grants"
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"disabled": false,
											"description": "The unique identifier for the request",
											"key": "X-Request-Id",
											"value": "<string>"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"timestamp\": \"<string>\",\n  \"code\": \"<number>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"id": "c342320d-903b-42fa-a90b-3cdc964ab1d8",
									"name": "Resource Gone or Expired",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/grants",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"grants"
											]
										}
									},
									"status": "Gone",
									"code": 410,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"disabled": false,
											"description": "The unique identifier for the request",
											"key": "X-Request-Id",
											"value": "<string>"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"timestamp\": \"<string>\",\n  \"code\": \"<number>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"id": "20167b6a-09a6-43d3-8c9f-bad3be2f59c7",
									"name": "Internal Server Error",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/grants",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"grants"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"disabled": false,
											"description": "The unique identifier for the request",
											"key": "X-Request-Id",
											"value": "<string>"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"timestamp\": \"<string>\",\n  \"code\": \"<number>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Get Grant",
							"id": "c9d2e341-3c38-47ee-8bb2-2da05cdef9b7",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "create:nonprofits read:nonprofits create:connects read:connects create:grants read:grants",
											"type": "string"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://dev-w2rfcsc8.us.auth0.com/oauth/token",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "client_credentials",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/grants/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"grants",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "urn:uuid:1b448909-3236-35df-5eed-868c3bc5ce11",
											"description": "(Required) the unique id of the grant"
										}
									]
								},
								"description": "Get a grant object generated by Chariot Connect. \nIf the grant does not exist, returns a 404 status.\nIf the provided ID is not a v4 UUID according to RFC 4122, returns a 400 status."
							},
							"response": [
								{
									"id": "bf4d77ca-4800-4718-9745-5f4acc458fe5",
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/grants/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"grants",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "urn:uuid:1b448909-3236-35df-5eed-868c3bc5ce11",
													"description": "(Required) the unique id of the grant"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"disabled": false,
											"description": "The unique identifier for the request",
											"key": "X-Request-Id",
											"value": "<string>"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<uuid>\",\n  \"userFriendlyId\": \"<string>\",\n  \"fundId\": \"<string>\",\n  \"amount\": \"<double>\",\n  \"workflowSessionId\": \"<uuid>\",\n  \"externalGrantId\": \"<string>\",\n  \"createdAt\": \"<dateTime>\",\n  \"updatedAt\": \"<dateTime>\",\n  \"status\": \"<string>\",\n  \"coveredFees\": \"<boolean>\",\n  \"feeAmount\": \"<integer>\",\n  \"metadata\": {\n    \"deserunt4\": \"<string>\",\n    \"ex82\": \"<string>\"\n  },\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"phone\": \"<string>\",\n  \"email\": \"<string>\",\n  \"note\": \"<string>\",\n  \"statuses\": [\n    {\n      \"id\": \"<uuid>\",\n      \"createdAt\": \"<dateTime>\",\n      \"status\": \"<string>\",\n      \"comment\": \"<string>\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"createdAt\": \"<dateTime>\",\n      \"status\": \"<string>\",\n      \"comment\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"id": "48c7a6db-1ec9-46a2-9c01-dbd9869e76fd",
									"name": "The request is invalid or contains invalid parameters",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/grants/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"grants",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "urn:uuid:1b448909-3236-35df-5eed-868c3bc5ce11",
													"description": "(Required) the unique id of the grant"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"disabled": false,
											"description": "The unique identifier for the request",
											"key": "X-Request-Id",
											"value": "<string>"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"timestamp\": \"<string>\",\n  \"code\": \"<number>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"id": "790bdd8f-7e58-4769-b77d-b843d1a8b18a",
									"name": "Access denied",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/grants/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"grants",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "urn:uuid:1b448909-3236-35df-5eed-868c3bc5ce11",
													"description": "(Required) the unique id of the grant"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"disabled": false,
											"description": "The unique identifier for the request",
											"key": "X-Request-Id",
											"value": "<string>"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"timestamp\": \"<string>\",\n  \"code\": \"<number>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"id": "e792b4f8-06c1-4503-866b-aab1793f2870",
									"name": "Resource Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/grants/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"grants",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "urn:uuid:1b448909-3236-35df-5eed-868c3bc5ce11",
													"description": "(Required) the unique id of the grant"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"disabled": false,
											"description": "The unique identifier for the request",
											"key": "X-Request-Id",
											"value": "<string>"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"timestamp\": \"<string>\",\n  \"code\": \"<number>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"id": "a787fd2a-da6a-41cd-9ea3-8d652b7141e7",
									"name": "Internal Server Error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/grants/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"grants",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "urn:uuid:1b448909-3236-35df-5eed-868c3bc5ce11",
													"description": "(Required) the unique id of the grant"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"disabled": false,
											"description": "The unique identifier for the request",
											"key": "X-Request-Id",
											"value": "<string>"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"timestamp\": \"<string>\",\n  \"code\": \"<number>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
								}
							]
						}
					],
					"id": "87d21216-4e5a-479b-a593-87b461c80431"
				},
				{
					"name": "dafs",
					"item": [
						{
							"name": "List DAFs",
							"id": "3828e9ba-5217-4238-80e6-db53e425fc5e",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/dafs?pageLimit=10&pageToken=commodo sit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"dafs"
									],
									"query": [
										{
											"key": "pageLimit",
											"value": "10",
											"description": "the number of results to return; defaults to 10, max is 100"
										},
										{
											"key": "pageToken",
											"value": "commodo sit",
											"description": "A token to use to retrieve the next page of results. This is useful for paginating over many pages of results. If set, all other arguments are expected to be kept the same as previous calls."
										}
									]
								},
								"description": "List all DAF objects. This API allows for paginating over many results."
							},
							"response": [
								{
									"id": "e913b490-8eae-4e9c-ae1c-cf70564c536c",
									"name": "The response for Dafs.list",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v1/dafs?pageLimit=10&pageToken=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"dafs"
											],
											"query": [
												{
													"key": "pageLimit",
													"value": "10"
												},
												{
													"key": "pageToken",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"disabled": false,
											"description": "The unique identifier for the request",
											"key": "X-Request-Id",
											"value": "<string>"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"results\": [\n    {\n      \"id\": \"<string>\",\n      \"orgName\": \"<string>\",\n      \"address\": \"<string>\",\n      \"address2\": \"<string>\",\n      \"city\": \"<string>\",\n      \"state\": \"<string>\",\n      \"zip\": \"<string>\",\n      \"supported\": \"<boolean>\",\n      \"minimumGrantAmount\": \"<number>\",\n      \"institutionDown\": \"<boolean>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"orgName\": \"<string>\",\n      \"address\": \"<string>\",\n      \"address2\": \"<string>\",\n      \"city\": \"<string>\",\n      \"state\": \"<string>\",\n      \"zip\": \"<string>\",\n      \"supported\": \"<boolean>\",\n      \"minimumGrantAmount\": \"<number>\",\n      \"institutionDown\": \"<boolean>\"\n    }\n  ],\n  \"nextPageToken\": \"<string>\"\n}"
								},
								{
									"id": "9fa184e9-571e-4183-b362-4e1b50b307f8",
									"name": "The request is invalid or contains invalid parameters",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v1/dafs?pageLimit=10&pageToken=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"dafs"
											],
											"query": [
												{
													"key": "pageLimit",
													"value": "10"
												},
												{
													"key": "pageToken",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"disabled": false,
											"description": "The unique identifier for the request",
											"key": "X-Request-Id",
											"value": "<string>"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"timestamp\": \"<string>\",\n  \"code\": \"<number>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"id": "00465198-948e-4227-9af4-5cbcc2af505d",
									"name": "Internal Server Error",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v1/dafs?pageLimit=10&pageToken=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"dafs"
											],
											"query": [
												{
													"key": "pageLimit",
													"value": "10"
												},
												{
													"key": "pageToken",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"disabled": false,
											"description": "The unique identifier for the request",
											"key": "X-Request-Id",
											"value": "<string>"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"timestamp\": \"<string>\",\n  \"code\": \"<number>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Get DAF object",
							"id": "78b20ca8-d1b9-41a0-9a0c-55918e5e8860",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/dafs/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"dafs",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "urn:uuid:1b448909-3236-35df-5eed-868c3bc5ce11",
											"description": "(Required) the unique id of the DAF"
										}
									]
								},
								"description": "Get a DAF object by id. \nIf the DAF does not exist, returns a 404 status.\nIf the provided ID is not a v4 UUID according to RFC 4122, returns a 400 status."
							},
							"response": [
								{
									"id": "07ea1622-a56a-494c-a795-dc19caa4afd1",
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v1/dafs/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"dafs",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "urn:uuid:1b448909-3236-35df-5eed-868c3bc5ce11",
													"description": "(Required) the unique id of the DAF"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"disabled": false,
											"description": "The unique identifier for the request",
											"key": "X-Request-Id",
											"value": "<string>"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<string>\",\n  \"orgName\": \"<string>\",\n  \"address\": \"<string>\",\n  \"address2\": \"<string>\",\n  \"city\": \"<string>\",\n  \"state\": \"<string>\",\n  \"zip\": \"<string>\",\n  \"supported\": \"<boolean>\",\n  \"minimumGrantAmount\": \"<number>\",\n  \"institutionDown\": \"<boolean>\"\n}"
								},
								{
									"id": "6420320c-e07b-41d0-8358-8786013240a7",
									"name": "The request is invalid or contains invalid parameters",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v1/dafs/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"dafs",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "urn:uuid:1b448909-3236-35df-5eed-868c3bc5ce11",
													"description": "(Required) the unique id of the DAF"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"disabled": false,
											"description": "The unique identifier for the request",
											"key": "X-Request-Id",
											"value": "<string>"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"timestamp\": \"<string>\",\n  \"code\": \"<number>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"id": "9d39f99a-3a3a-436c-8d91-ef90f9368bba",
									"name": "Resource Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v1/dafs/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"dafs",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "urn:uuid:1b448909-3236-35df-5eed-868c3bc5ce11",
													"description": "(Required) the unique id of the DAF"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"disabled": false,
											"description": "The unique identifier for the request",
											"key": "X-Request-Id",
											"value": "<string>"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"timestamp\": \"<string>\",\n  \"code\": \"<number>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"id": "36bad4be-3fff-41e6-9e6a-e08c34cf0ba3",
									"name": "Internal Server Error",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v1/dafs/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"dafs",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "urn:uuid:1b448909-3236-35df-5eed-868c3bc5ce11",
													"description": "(Required) the unique id of the DAF"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"disabled": false,
											"description": "The unique identifier for the request",
											"key": "X-Request-Id",
											"value": "<string>"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"timestamp\": \"<string>\",\n  \"code\": \"<number>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
								}
							]
						}
					],
					"id": "16dd9301-e523-4b37-acfe-8d15701308bd"
				},
				{
					"name": "Get nonprofit by EIN",
					"id": "9b1116f7-7911-47eb-a1e5-ea9c3abcc6fb",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "scope",
									"value": "create:nonprofits read:nonprofits create:connects read:connects create:grants read:grants",
									"type": "string"
								},
								{
									"key": "accessTokenUrl",
									"value": "https://dev-w2rfcsc8.us.auth0.com/oauth/token",
									"type": "string"
								},
								{
									"key": "grant_type",
									"value": "client_credentials",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/nonprofit/:ein",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"nonprofit",
								":ein"
							],
							"variable": [
								{
									"key": "ein",
									"value": "commodo sit",
									"description": "(Required) The unique federal employer identification number (EIN) of the nonprofit. \nThis value should be exactly 9 digits and should not contain any special characters such as dashes."
								}
							]
						},
						"description": "Get a nonprofit organization by EIN.\nIf the nonprofit does not exist, this returns 404 Not Found status. \nIn the case that the nonprofit does not exist, you can create one by calling the POST /v1/nonprofits API endpoint. \nThe EIN should be exactly 9 digits and should not contain any special characters such as dashes."
					},
					"response": [
						{
							"id": "e0c76913-6711-47de-819f-6fafe3e6167b",
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/nonprofit/:ein",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"nonprofit",
										":ein"
									],
									"variable": [
										{
											"key": "ein",
											"value": "commodo sit",
											"description": "(Required) The unique federal employer identification number (EIN) of the nonprofit. \nThis value should be exactly 9 digits and should not contain any special characters such as dashes."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"disabled": false,
									"description": "The unique identifier for the request",
									"key": "X-Request-Id",
									"value": "<string>"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"ein\": \"<string>\",\n  \"preferredName\": \"<string>\",\n  \"address\": {\n    \"city\": \"<string>\",\n    \"country\": \"<string>\",\n    \"line1\": \"<string>\",\n    \"postalCode\": \"<string>\",\n    \"state\": \"<string>\",\n    \"line2\": \"<string>\"\n  },\n  \"billingUser\": \"<string>\",\n  \"hasPaymentMethod\": \"<boolean>\",\n  \"picture\": \"<string>\",\n  \"website\": \"<string>\",\n  \"createdAt\": \"<dateTime>\",\n  \"updatedAt\": \"<dateTime>\"\n}"
						},
						{
							"id": "300e8073-6a68-4bca-9742-0beb7cdc4f2c",
							"name": "The request is invalid or contains invalid parameters",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/nonprofit/:ein",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"nonprofit",
										":ein"
									],
									"variable": [
										{
											"key": "ein",
											"value": "commodo sit",
											"description": "(Required) The unique federal employer identification number (EIN) of the nonprofit. \nThis value should be exactly 9 digits and should not contain any special characters such as dashes."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"disabled": false,
									"description": "The unique identifier for the request",
									"key": "X-Request-Id",
									"value": "<string>"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"timestamp\": \"<string>\",\n  \"code\": \"<number>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
						},
						{
							"id": "26a1bb7e-df23-4449-afbc-df6cc88e817e",
							"name": "Access denied",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/nonprofit/:ein",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"nonprofit",
										":ein"
									],
									"variable": [
										{
											"key": "ein",
											"value": "commodo sit",
											"description": "(Required) The unique federal employer identification number (EIN) of the nonprofit. \nThis value should be exactly 9 digits and should not contain any special characters such as dashes."
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"disabled": false,
									"description": "The unique identifier for the request",
									"key": "X-Request-Id",
									"value": "<string>"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"timestamp\": \"<string>\",\n  \"code\": \"<number>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
						},
						{
							"id": "135a1e89-ecf7-4d71-84d9-4eeea53f6cc3",
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/nonprofit/:ein",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"nonprofit",
										":ein"
									],
									"variable": [
										{
											"key": "ein",
											"value": "commodo sit",
											"description": "(Required) The unique federal employer identification number (EIN) of the nonprofit. \nThis value should be exactly 9 digits and should not contain any special characters such as dashes."
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"disabled": false,
									"description": "The unique identifier for the request",
									"key": "X-Request-Id",
									"value": "<string>"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"timestamp\": \"<string>\",\n  \"code\": \"<number>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
						},
						{
							"id": "26b99f10-071e-48d6-b0a5-3b4f1b740e04",
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/nonprofit/:ein",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"nonprofit",
										":ein"
									],
									"variable": [
										{
											"key": "ein",
											"value": "commodo sit",
											"description": "(Required) The unique federal employer identification number (EIN) of the nonprofit. \nThis value should be exactly 9 digits and should not contain any special characters such as dashes."
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"disabled": false,
									"description": "The unique identifier for the request",
									"key": "X-Request-Id",
									"value": "<string>"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"timestamp\": \"<string>\",\n  \"code\": \"<number>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Create nonprofit",
					"id": "19fb957a-f74f-4cc9-ada0-ab406260e07f",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "scope",
									"value": "create:nonprofits read:nonprofits create:connects read:connects create:grants read:grants",
									"type": "string"
								},
								{
									"key": "accessTokenUrl",
									"value": "https://dev-w2rfcsc8.us.auth0.com/oauth/token",
									"type": "string"
								},
								{
									"key": "grant_type",
									"value": "client_credentials",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"ein\": \"043567500\",\n  \"user\": {\n    \"email\": \"ben.give@co.com\",\n    \"phone\": \"9127772424\",\n    \"firstName\": \"Ben\",\n    \"lastName\": \"Give\"\n  },\n  \"preferredName\": \"veniam Ut quis ut\",\n  \"picture\": \"sunt deserunt tempor\",\n  \"website\": \"in\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/nonprofits",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"nonprofits"
							]
						},
						"description": "Create a nonprofit organization account.\nThis is useful for integration partners to use after a nonprofit consents to use the Chariot payment option on their donation forms.\nIf a nonprofit does not already exist for the EIN, this will return a 201 Created status.\nIf a nonprofit already exists for the given EIN on the system, this will return a 409 Conflict status.\nWhen integrating this API, it's useful to either handle the 409 error or make a call to the GET v1/nonprofit/{ein} API first to check if it exists prior to creating it."
					},
					"response": [
						{
							"id": "8e45f986-137c-42c6-91fb-257c0179c8a0",
							"name": "Created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/nonprofits",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"nonprofits"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"disabled": false,
									"description": "The unique identifier for the request",
									"key": "X-Request-Id",
									"value": "<string>"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"ein\": \"<string>\",\n  \"preferredName\": \"<string>\",\n  \"address\": {\n    \"city\": \"<string>\",\n    \"country\": \"<string>\",\n    \"line1\": \"<string>\",\n    \"postalCode\": \"<string>\",\n    \"state\": \"<string>\",\n    \"line2\": \"<string>\"\n  },\n  \"billingUser\": \"<string>\",\n  \"hasPaymentMethod\": \"<boolean>\",\n  \"picture\": \"<string>\",\n  \"website\": \"<string>\",\n  \"createdAt\": \"<dateTime>\",\n  \"updatedAt\": \"<dateTime>\"\n}"
						},
						{
							"id": "5cdc8c1e-f43a-4990-b211-4fdc4fc7e646",
							"name": "The request is invalid or contains invalid parameters",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/nonprofits",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"nonprofits"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"disabled": false,
									"description": "The unique identifier for the request",
									"key": "X-Request-Id",
									"value": "<string>"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"timestamp\": \"<string>\",\n  \"code\": \"<number>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
						},
						{
							"id": "735f3c00-c35c-4784-9de6-d61ae115c036",
							"name": "Access denied",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/nonprofits",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"nonprofits"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"disabled": false,
									"description": "The unique identifier for the request",
									"key": "X-Request-Id",
									"value": "<string>"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"timestamp\": \"<string>\",\n  \"code\": \"<number>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
						},
						{
							"id": "2e916489-4f99-4526-904b-e76bd9c2f820",
							"name": "Resource Conflicts",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/nonprofits",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"nonprofits"
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"disabled": false,
									"description": "The unique identifier for the request",
									"key": "X-Request-Id",
									"value": "<string>"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"timestamp\": \"<string>\",\n  \"code\": \"<number>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
						},
						{
							"id": "7dc431a8-55ce-4bd1-9281-1d25f11491c1",
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/nonprofits",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"nonprofits"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"disabled": false,
									"description": "The unique identifier for the request",
									"key": "X-Request-Id",
									"value": "<string>"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"timestamp\": \"<string>\",\n  \"code\": \"<number>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
						}
					]
				}
			],
			"id": "ef229ff7-ef09-4174-a636-6030c0f3d21b"
		}
	],
	"variable": [
		{
			"id": "32d74dc9-75f1-47b6-9f59-460f6bf3d387",
			"key": "baseUrl",
			"value": "https://sandboxapi.givechariot.com",
			"type": "string"
		}
	]
}